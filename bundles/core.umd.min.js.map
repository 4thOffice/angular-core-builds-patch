{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","__window","window","__self","WorkerGlobalScope","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","Set","onDestroy","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","add","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","input","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","componentResourceResolutionQueue","componentNeedsResolution","component","templateUrl","styleUrls","clearResolutionOfComponentResourcesQueue","unwrapResponse","response","EMPTY_OBJ","EMPTY_ARRAY$2","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","renderStringify","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","template","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","contentQueriesRefresh","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","_","setInput","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","elementDepthCount","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","registerPreOrderHooks","directiveIndex","directiveDef","tView","initHooks","checkHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","firstPassHooks","hooksToCall","callHooks","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","viewQueryIndex","getCurrentViewQueryIndex","setCurrentViewQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","directive","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","a","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","document","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","isPromise","then","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","nativeInsertBefore","nativeRemoveChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","getRenderParent","getHighestElementOrICUContainer","getHostNative","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","isHostElement","childEl","childTNode","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attrs","attr","patchInitialStylingValue","initialStyling","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","isClassBased","directiveRef","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","currentValue","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","style","removeStyle","className","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","_CLEAN_PROMISE","Promise","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","clone","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","pipeRegistry","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","setProperty","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","eventName","listenerFn","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","dataValue","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","startingIndex","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","creationMode","executeViewQueryFn","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","superPrototype","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","prevDoCheck","wrapOnChanges","hook","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","destroyed","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","update","icus","appendI18nNode","previousTNode","i18nPostprocess","replacements","_match","shift","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","textRNode","destinationNodeIndex","destinationTNode","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","QueryList","_results","changes","filter","find","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","loadViewQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵviewQuery","ɵloadViewQuery","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","modules","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$3","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","facade","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","getDebugContext","getOriginalError","defaultErrorLogger","trace","events","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","commentNode","nativeNextSibling","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","classList","styleName","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.1+14.sha-22a43cf\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$2 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$2,\n            _: null,\n            setInput: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$2,\n            declarations: def.declarations || EMPTY_ARRAY$2,\n            imports: def.imports || EMPTY_ARRAY$2,\n            exports: def.exports || EMPTY_ARRAY$2,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * The TView's hooks arrays are arranged in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`. For `OnChanges`\n     * hooks, the `directiveIndex` will be *negative*, signaling {@link callHooks} that the\n     * `hookFunction` must be passed the the appropriate {@link SimpleChanges} object.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView` such that\n     * they're added in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * Has the side effect of updating the RunInit flag in `lView` to be `0`, so that\n     * this isn't run a second time.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n            currentView[FLAGS] &= ~32 /* RunInit */;\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param lView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? firstPassHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // If this is the first content query on a node, any existing LQueries needs to be cloned.\n        // In subsequent template passes, the cloning occurs before directive instantiation\n        // in `createDirectivesAndLocals`.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View Query which needs to be processed next.\n     * We iterate over the list of View Queries stored in LView and increment current query index.\n     */\n    var viewQueryIndex = 0;\n    function getCurrentViewQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewQueryIndex;\n    }\n    function setCurrentViewQueryIndex(value) {\n        viewQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n                lView[FLAGS] |= 32 /* RunInit */;\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$2;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateProperty(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAttribute(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual$1(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveChild(renderer, parent, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 16 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~16 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 64 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[HOST_NODE];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            // We've got a parent which is an element in the current view. We just need to verify if the\n            // parent element is not a component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would then move it to its final destination.\n            if (parent.flags & 1 /* isComponent */) {\n                return null;\n            }\n            else {\n                return getNativeByTNode(parent, currentView);\n            }\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /**\n     * Removes a native child node from a given native parent node.\n     */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent, child, isHostElement) :\n            parent.removeChild(child);\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        var parentNative = getRenderParent(childTNode, currentView);\n        // We only remove the element if it already has a render parent.\n        if (parentNative) {\n            nativeRemoveChild(currentView[RENDERER], parentNative, childEl);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            value.length !== LCONTAINER_LENGTH;\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, startingIndex, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = startingIndex; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY$2;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$2;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$2;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style[prop] = value;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style[prop] = '';\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n            2 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        else {\n            // During first template pass, queries are created or cloned when first requested\n            // using `getOrCreateCurrentQueries`. For subsequent template passes, we clone\n            // any current LQueries here up-front if the current node hosts a content query.\n            if (isContentQueryHost(getPreviousOrParentTNode()) && lView[QUERIES]) {\n                lView[QUERIES] = lView[QUERIES].clone();\n            }\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                target.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAttribute(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            if (ngDevMode) {\n                validateProperty(propName);\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var i = setUpAttributes(native, attrs);\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, i, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            // If we hit Select-Only, Classes or Styles, we're done anyway. None of those are valid inputs.\n            if (attrName === 3 /* SelectOnly */ || attrName === 1 /* Classes */ ||\n                attrName === 2 /* Styles */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        registerPostOrderHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                }\n                componentChild.next = null;\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentView = findComponentView(projectedView);\n                    var currentComponentHost = currentComponentView[HOST_NODE];\n                    var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        if (Array.isArray(firstProjectedNode)) {\n                            appendChild(firstProjectedNode, tProjectionNode, lView);\n                        }\n                        else {\n                            projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                            projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                            nodeToProject = firstProjectedNode;\n                            projectedView = currentComponentView[PARENT];\n                            continue;\n                        }\n                    }\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                    projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 8 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView[FLAGS] |= 8 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 8 /* Dirty */;\n        return lView;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            namespaceHTML();\n            creationMode && executeViewQueryFn(hostView, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            !creationMode && executeViewQueryFn(hostView, hostTView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(lView, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentViewQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(getRenderFlags(lView), component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~1 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$2) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            var prevDoCheck = definition.doCheck;\n            var prevOnInit = definition.onInit;\n            definition.onInit = wrapOnChanges(prevOnInit);\n            definition.doCheck = wrapOnChanges(prevDoCheck);\n        }\n    }\n    function wrapOnChanges(hook) {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                simpleChangesStore.previous = current;\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n            hook && hook.call(this);\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.1+14.sha-22a43cf');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n                4 /* CheckAlways */ | 128 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        var textNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode =\n                            createNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            removeChild(removedPhTNode, removedPhRNode, viewData);\n        }\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE], viewData);\n            }\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queryList._valuesTree = [];\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentViewQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index, viewQuery);\n        setCurrentViewQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentViewQueryIndex();\n        setCurrentViewQueryIndex(index + 1);\n        return load(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$3, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$3,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$3);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$2, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$2,\n            outputs: metadata.outputs || EMPTY_ARRAY$2,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = moduleDef.declarations.reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: Injector\n        }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{\n            type: ApplicationRef\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}