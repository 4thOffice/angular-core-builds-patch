{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","flags","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","R3ResolvedDependencyType","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","elementDepthCount","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","allHooks","hooksToCall","callHooks","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","NodeInjector","_tNode","_lView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","directive","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","nativeInsertBefore","nativeRemoveChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","getRenderParent","getHighestElementOrICUContainer","getHostNative","insertBefore","removeChild","appendChild","childEl","childTNode","parentTNode","getBeforeNodeForView","containerNative","viewTNode","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","NG_TEMPLATE_SELECTOR","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","sanitizer","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","prop","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","input","isClassBased","directiveRef","directiveIndex","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","eventTargetResolver","resolved","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","element_1","removeAttribute","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","loadComponentRenderer","loadRendererFn","dataValue","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","publicToDeclaredInputs","publicToMinifiedInputs","proto","declaredKey_1","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","set","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","SWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","_this","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","Function","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","QueryList","_results","changes","filter","find","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","modules","assertNotExisting","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","flushModuleScopingQueueAsMuchAsPossible","hasSelectorScope","compileDirective","facade","typeArgumentCount","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","commentNode","nativeNextSibling","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","classList","styleName","eStyles","style","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.0+102.sha-b05baa5\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n            currentView[FLAGS] &= ~32 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(currentView, allHooks, checkHooks, checkNoChangesMode) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n                lView[FLAGS] |= 32 /* RunInit */;\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveChild(renderer, parent, node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 16 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~16 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 64 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[HOST_NODE];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            // We've got a parent which is an element in the current view. We just need to verify if the\n            // parent element is not a component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would then move it to its final destination.\n            if (parent.flags & 1 /* isComponent */) {\n                return null;\n            }\n            else {\n                return getNativeByTNode(parent, currentView);\n            }\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Removes a native child node from a given native parent node.\n     */\n    function nativeRemoveChild(renderer, parent, child) {\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent, child) :\n            parent.removeChild(child);\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */ ||\n                parentTNode.type === 5 /* IcuContainer */) {\n                var anchorNode = getNativeByTNode(parentTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(renderParent, childEl) :\n                    renderParent.appendChild(childEl);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        var parentNative = getRenderParent(childTNode, currentView);\n        // We only remove the element if it already has a render parent.\n        if (parentNative) {\n            nativeRemoveChild(currentView[RENDERER], parentNative, childEl);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = 0; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n            2 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        try {\n            if (normalExecutionPath && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (isCreationMode(hostView)) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i++];\n            if (typeof attrName == 'number') {\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i++];\n                    var attrName_1 = attrs[i++];\n                    var attrVal = attrs[i++];\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                }\n                else {\n                    // All other `AttributeMarker`s are ignored here.\n                    break;\n                }\n            }\n            else {\n                /// attrName is string;\n                var attrVal = attrs[i++];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                target.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value, tNode.tagName || '', name);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub components renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 2) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 1]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static styling values to a host element.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array containing class and styling information. The values must be marked with\n     *              `AttributeMarker`.\n     *\n     *        ```\n     *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n     *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n     *        elementHostAttrs(directive, attrs);\n     *        ```\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 3 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 8 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView[FLAGS] |= 8 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 8 /* Dirty */;\n        return lView;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, hostView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, view, component) {\n        if (viewQuery && isCreationMode(view)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, view, component) {\n        if (viewQuery && !isCreationMode(view)) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~1 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var publicToDeclaredInputs = definition.declaredInputs;\n        var publicToMinifiedInputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (publicName) {\n            if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n                var minifiedKey = publicToMinifiedInputs[publicName];\n                var declaredKey_1 = publicToDeclaredInputs[publicName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredKey_1];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredKey_1] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var publicName in publicToDeclaredInputs) {\n            _loop_1(publicName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.0+102.sha-b05baa5');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n                4 /* CheckAlways */ | 128 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            removeChild(removedPhTNode, removedPhRNode, viewData);\n        }\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE], viewData);\n            }\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queryList._valuesTree = [];\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing && existing.moduleType);\n        modules.set(id, factory);\n    }\n    function assertNotExisting(id, type) {\n        if (type) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$2, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringify$1).sort();\n                errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify$1(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify$1(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringify$1(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: Injector\n        }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{\n            type: ApplicationRef\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}