{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponent","isComponentDef","isRootView","elementDepthCount","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","_stylingState","_stateStorage","Map","_stylingElement","STYLING_INDEX_START_VALUE","BIT_MASK_START_VALUE","getStylingState","element","readFromMap","classesBitMask","classesIndex","stylesBitMask","stylesIndex","resetStylingState","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","selectView","newView","hostTNode","oldView","getSelectedIndex","_currentSanitizer","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","RendererStyleFlags3","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","updateLastDirectiveIndex","lastDirectiveIndex","markContextToPersistState","setConfig","getConfig","getProp","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","offset","getDefaultValue","allowStylingFlush","isContextLocked","stateIsPersisted","getPropValuesStartPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","setMapValue","getMapValue","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","Function","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","prop","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","isMapBased","state","updateBindingData","updateStyleBinding","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","registered","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","firstValueIndex","lastValueIndex","maybeApplyStyling","allowFlush","bitMask","styleSetter","styleSanitizer","lockAndFinalizeContext","initialValues","updateInitialStylingOnContext","initialStyling","lockContext","contextHasUpdates","applyStyling","bindingData","bitMaskValue","applyStylingFn","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle","nativeStyle","style","DashCase","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","isClassBased","stylingMapArr","NO_CHANGE","ELEMENT_MARKER","COMMENT_MARKER","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activateStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","addItemToStylingMap","allowOverwrite","propAtIndex","applied","stylingMapToString","attrValue","stylingMapToStringMap","stringMap","TStylingContextDebug","enumerable","configurable","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","readLViewValue","TView","queries","bindingStartIndex","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyMetadataStartIndex","propertyMetadataEndIndex","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","nodes","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","ɵɵselect","selectInternal","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","selectedIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesAndLocals","localRefExtractor","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","injectorDefTypes","Set","_destroyed","dedupStack","injectorDef","processInjectorType","provider","processProvider","set","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","multiProviderMixError","staticError","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","useNew","recursivelyProcessProviders","resolvedProvider","resolveProvider","computeDeps","providerDeps","multiProvider","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵattribute","bound","interpolationV","isBindingUpdated","storeBindingMetadata","prefix","suffix","lastBindingIndex","interpolation1","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵstyling","updateLastDirectiveIndex$1","getClassesContext","getStylesContext","getActiveDirectiveStylingIndex","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","_stylingProp","resolveStylePropValue","resolvedValue","deferStylingUpdate","ɵɵclassProp","defer","updated","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","ɵɵstylingApply","getRenderer","flushStyling","classesContext","stylesContext","persistState","allowFlushClasses","allowFlushStyles","classesFlushed","stylesFlushed","deleteStylingStateFromStorage","storeStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getContext","allocTStylingContext","getActiveDirectiveSuperClassHeight","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextBinding","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","resetAllStylingState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","debugNode","getDebugNode","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.3+50.sha-70cf8ed.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n            stylingWritePersistedState: 0,\n            stylingReadPersistedState: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ token: type, factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * // TODO(matsko): add updateMask info\n     *\n     * This file contains all state-based logic for styling in Angular.\n     *\n     * Styling in Angular is evaluated with a series of styling-specific\n     * template instructions which are called one after another each time\n     * change detection occurs in Angular.\n     *\n     * Styling makes use of various temporary, state-based variables between\n     * instructions so that it can better cache and optimize its values.\n     * These values are usually populated and cleared when an element is\n     * exited in change detection (once all the instructions are run for\n     * that element).\n     *\n     * There are, however, situations where the state-based values\n     * need to be stored and used at a later point. This ONLY occurs when\n     * there are template-level as well as host-binding-level styling\n     * instructions on the same element. The example below shows exactly\n     * what could be:\n     *\n     * ```html\n     * <!-- two sources of styling: the template and the directive -->\n     * <div [style.width]=\"width\" dir-that-sets-height></div>\n     * ```\n     *\n     * If and when this situation occurs, the current styling state is\n     * stored in a storage map value and then later accessed once the\n     * host bindings are evaluated. Once styling for the current element\n     * is over then the map entry will be cleared.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var _stylingState = null;\n    var _stateStorage = new Map();\n    // this value is not used outside this file and is only here\n    // as a caching check for when the element changes.\n    var _stylingElement = null;\n    var STYLING_INDEX_START_VALUE = 1;\n    var BIT_MASK_START_VALUE = 0;\n    function getStylingState(element, readFromMap) {\n        if (!_stylingElement || element !== _stylingElement) {\n            _stylingElement = element;\n            if (readFromMap) {\n                _stylingState = _stateStorage.get(element) || null;\n                ngDevMode && ngDevMode.stylingReadPersistedState++;\n            }\n            _stylingState = _stylingState || {\n                classesBitMask: BIT_MASK_START_VALUE,\n                classesIndex: STYLING_INDEX_START_VALUE,\n                stylesBitMask: BIT_MASK_START_VALUE,\n                stylesIndex: STYLING_INDEX_START_VALUE,\n            };\n        }\n        return _stylingState;\n    }\n    function resetStylingState() {\n        _stylingState = null;\n        _stylingElement = null;\n    }\n    function storeStylingState(element, state) {\n        ngDevMode && ngDevMode.stylingWritePersistedState++;\n        _stateStorage.set(element, state);\n    }\n    function deleteStylingStateFromStorage(element) {\n        _stateStorage.delete(element);\n    }\n    function resetAllStylingState() {\n        resetStylingState();\n        _stateStorage.clear();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex === null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param host Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function selectView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n        resetAllStylingState();\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // we have now jumped to another element\n        // therefore the state is stale\n        resetStylingState();\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        return [\n            initialStyling || [''],\n            0 /* Initial */,\n            TEMPLATE_DIRECTIVE_INDEX,\n            mapBasedConfig,\n            0,\n            MAP_BASED_ENTRY_PROP_NAME,\n        ];\n    }\n    /**\n     * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n     *\n     * Styling in Angular can be applied from the template as well as multiple sources of\n     * host bindings. This means that each binding function (the template function or the\n     * hostBindings functions) will generate styling instructions as well as a styling\n     * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n     * template function are independent from one another this means that the styling apply\n     * function will be called multiple times. By tracking the last directive index (which\n     * is what happens in this function) the styling algorithm knows exactly when to flush\n     * styling (which is when the last styling apply function is executed).\n     */\n    function updateLastDirectiveIndex(context, lastDirectiveIndex) {\n        if (lastDirectiveIndex === TEMPLATE_DIRECTIVE_INDEX) {\n            var currentValue = context[2 /* LastDirectiveIndexPosition */];\n            if (currentValue > TEMPLATE_DIRECTIVE_INDEX) {\n                // This means that a directive or two contained a host bindings function, but\n                // now the template function also contains styling. When this combination of sources\n                // comes up then we need to tell the context to store the state between updates\n                // (because host bindings evaluation happens after template binding evaluation).\n                markContextToPersistState(context);\n            }\n        }\n        else {\n            context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n        }\n    }\n    function getConfig(context) {\n        return context[1 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[1 /* ConfigPosition */] = value;\n    }\n    function getProp(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n            false;\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function stateIsPersisted(context) {\n        return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n    }\n    function markContextToPersistState(context) {\n        setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n    }\n    function getPropValuesStartPosition(context) {\n        return 6 /* MapBindingsBindingsStartPosition */ +\n            context[4 /* MapBindingsValuesCountPosition */];\n    }\n    function isMapBased(prop) {\n        return prop === MAP_BASED_ENTRY_PROP_NAME;\n    }\n    function hasValueChanged(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        // these are special cases for String based values (which are created as artifacts\n        // when sanitization is bypassed on a particular value)\n        if (compareValueA instanceof String) {\n            compareValueA = compareValueA.toString();\n        }\n        if (compareValueB instanceof String) {\n            compareValueB = compareValueB.toString();\n        }\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[0 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n            // empty\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ?\n            value.changingThisBreaksApplicationSecurity :\n            '';\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() ||\n            null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    /**\n     * Default size count value for a new entry in a context.\n     *\n     * A value of `1` is used here because each entry in the context has a default\n     * property.\n     */\n    var DEFAULT_SIZE_VALUE = 1;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular CSS class need to be\n            // applied again because on or more of the bindings for the CSS\n            // class have changed.\n            state.classesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var sanitizationRequired = isMapBased ?\n            true :\n            (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular property need to be\n            // applied again because on or more of the bindings for the CSS\n            // property have changed.\n            state.stylesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        var registered = false;\n        if (prop) {\n            // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                registered = true;\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n            registered = true;\n        }\n        return registered;\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var firstValueIndex = index + 3 /* BindingsStartOffset */;\n        var lastValueIndex = firstValueIndex + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            // the loop here will check to see if the binding already exists\n            // for the property in the context. Why? The reason for this is\n            // because the styling context is not \"locked\" until the first\n            // flush has occurred. This means that if a repeated element\n            // registers its styling bindings then it will register each\n            // binding more than once (since its duplicated). This check\n            // will prevent that from happening. Note that this only happens\n            // when a binding is first encountered and not each time it is\n            // updated.\n            for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n                var indexAtPosition = context[i];\n                if (indexAtPosition === bindingValue)\n                    return;\n            }\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (bindingValue !== null && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the `stylingApply()` instruction (which is run at the very end of styling\n     * change detection) and will rely on any state values that are set from when\n     * any styling bindings update.\n     *\n     * This function may be called multiple times on the same element because it can\n     * be called from the template code as well as from host bindings. In order for\n     * styling to be successfully flushed to the element (which will only happen once\n     * despite this being called multiple times), the following criteria must be met:\n     *\n     * - `flushStyling` is called from the very last directive that has styling for\n     *    the element (see `allowStylingFlush()`).\n     * - one or more bindings for classes or styles has updated (this is checked by\n     *   examining the classes or styles bit mask).\n     *\n     * If the style and class values are successfully applied to the element then\n     * the temporary state values for the element will be cleared. Otherwise, if\n     * this did not occur then the styling state is persisted (see `state.ts` for\n     * more information on how this works).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var persistState = classesContext ? stateIsPersisted(classesContext) :\n            (stylesContext ? stateIsPersisted(stylesContext) : false);\n        var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n        var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n        // deferred bindings are bindings which are scheduled to register with\n        // the context at a later point. These bindings can only registered when\n        // the context will be 100% flushed to the element.\n        if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n            flushDeferredBindings();\n        }\n        var state = getStylingState(element, persistState);\n        var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n        var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n        if (classesFlushed && stylesFlushed) {\n            resetStylingState();\n            if (persistState) {\n                deleteStylingStateFromStorage(element);\n            }\n        }\n        else if (persistState) {\n            storeStylingState(element, state);\n        }\n    }\n    function maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n        if (allowFlush && context) {\n            lockAndFinalizeContext(context);\n            if (contextHasUpdates(context, bitMask)) {\n                ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n                applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n                return true;\n            }\n        }\n        return allowFlush;\n    }\n    function contextHasUpdates(context, bitMask) {\n        return context && bitMask > BIT_MASK_START_VALUE;\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     */\n    function lockAndFinalizeContext(context) {\n        if (!isContextLocked(context)) {\n            var initialValues = getStylingMapArray(context);\n            if (initialValues) {\n                updateInitialStylingOnContext(context, initialValues);\n            }\n            lockContext(context);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var nativeStyle = native.style;\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.setProperty(prop, value));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.removeProperty(prop));\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (className !== '') {\n            // the reason why this may be `null` is either because\n            // it's a container element or it's a part of a test\n            // environment that doesn't have styling. In either\n            // case it's safe not to apply styling to the element.\n            var classList = native.classList;\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    (classList && classList.add(className));\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    (classList && classList.remove(className));\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a spart\n        // of a binding (since it's static)\n        var INITIAL_STYLING_COUNT_ID = -1;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n            var stylingMapArr = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < stylingMapArr.length) {\n                var prop = getMapProp(stylingMapArr, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(stylingMapArr, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    if (!targetPropValueWasApplied) {\n                        targetPropValueWasApplied = valueApplied;\n                    }\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n            // this is a fallback case in the event that the styling map is `null` for this\n            // binding but there are other map-based bindings that need to be evaluated\n            // afterwards. If the `prop` value is falsy then the intention is to cycle\n            // through all of the properties in the remaining maps as well. If the current\n            // styling map is too short then there are no values to iterate over. In either\n            // case the follow-up maps need to be iterated over.\n            if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n                return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map.\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n            (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 3 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyMetadataStartIndex, //\n        propertyMetadataEndIndex, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyMetadataStartIndex = propertyMetadataStartIndex;\n            this.propertyMetadataEndIndex = propertyMetadataEndIndex;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 8 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 4 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 16 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 1 /* isComponent */)\n                    flags.push('TNodeFlags.isComponent');\n                if (this.flags & 32 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 2 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                var styles = isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView) :\n                    null;\n                var classes = isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true) :\n                    null;\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n        // instruction `i18nStart` and the first node has the index 1 or more\n        if (index === 0 || !tView.firstChild) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            selectView(oldView, null);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            selectView(oldView, null);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, have an inherent ɵɵselect(0) so we don't have to generate that\n                // instruction for most update blocks\n                selectInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // propertyMetadataStartIndex: number\n        -1, // propertyMetadataEndIndex: number\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyMetadataStartIndex: -1,\n                propertyMetadataEndIndex: -1,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            ngDevMode && savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 4 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 1 /* isComponent */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[hostTNode.index], hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = hostTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 2 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNodeOrNull(tViewNodeChild, lView) :\n                lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 2 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 32 /* isDetached */) !== 32 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponent(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, bindReconciledValue, sanitizer);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param lView Current view\n     * @param value Value to diff\n     */\n    function bind(lView, value) {\n        var bindingIndex = lView[BINDING_INDEX]++;\n        ngDevMode && storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        ngDevMode && storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                lView[TVIEW].data[bindingIndex] = i0;\n            }\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n                tData[bindingIndex + 2] = i2;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n                tData[bindingIndex + 2] = i2;\n                tData[bindingIndex + 3] = i3;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n                tData[bindingIndex + 2] = i2;\n                tData[bindingIndex + 3] = i3;\n                tData[bindingIndex + 4] = i4;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n                tData[bindingIndex + 2] = i2;\n                tData[bindingIndex + 3] = i3;\n                tData[bindingIndex + 4] = i4;\n                tData[bindingIndex + 5] = i5;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n                tData[bindingIndex + 2] = i2;\n                tData[bindingIndex + 3] = i3;\n                tData[bindingIndex + 4] = i4;\n                tData[bindingIndex + 5] = i5;\n                tData[bindingIndex + 6] = i6;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tContainerNode, localRefExtractor);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling() {\n        var tView = getLView()[TVIEW];\n        if (tView.firstTemplatePass) {\n            updateLastDirectiveIndex$1(getPreviousOrParentTNode(), getActiveDirectiveStylingIndex());\n        }\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var updated = false;\n        if (value !== NO_CHANGE) {\n            if (isClassBased) {\n                updated = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updated = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n            }\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n        activateStylingMapFeature();\n        var lView = getLView();\n        var valueHasChanged = false;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(elementIndex, lView);\n            var native = getNativeByTNode(tNode, lView);\n            var oldValue = lView[bindingIndex];\n            valueHasChanged = hasValueChanged(oldValue, value);\n            var stylingMapArr = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            if (isClassBased) {\n                updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n            }\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context)) {\n                var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n            }\n            lView[bindingIndex] = newValue;\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length > 0) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be called from the template and hostBindings\n     * functions and may be called multiple times depending whether multiple\n     * sources of styling exist. If called multiple times, only the last call\n     * to `stlyingApply()` will render styling to the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var elementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        var sanitizer = getCurrentStyleSanitizer();\n        flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || [''];\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || [''];\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex$1(tNode, directiveIndex) {\n        updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not a style/class binding update should be applied later.\n     *\n     * This function will decide whether a binding should be applied immediately\n     * or later (just before the styles/classes are flushed to the element). The\n     * reason why this feature exists is because of super/sub directive inheritance.\n     * Angular will evaluate host bindings on the super directive first and the sub\n     * directive, but the styling bindings on the sub directive are of higher priority\n     * than the super directive. For this reason all styling bindings that take place\n     * in this circumstance will need to be deferred until later so that they can be\n     * applied together and in a different order (the algorithm handles that part).\n     */\n    function deferStylingUpdate() {\n        return getActiveDirectiveSuperClassHeight() > 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n        if (hasClassInput(tNode) && tNode.classes) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode) && tNode.styles) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = getInitialStylingValue(context) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        attachPatchData(native, lView);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        selectView(lContainer[PARENT], null);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var interpolatedValue = interpolation1(getLView(), prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var interpolatedValue = interpolation2(getLView(), prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var interpolatedValue = interpolation3(getLView(), prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var interpolatedValue = interpolation4(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var interpolatedValue = interpolation5(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var interpolatedValue = interpolation6(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var interpolatedValue = interpolation7(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var interpolatedValue = interpolation8(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var interpolatedValue = interpolationV(getLView(), values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        ngDevMode && ngDevMode.rendererSetText++;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(value) {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            textBindingInternal(lView, index, renderStringify(bound));\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, true);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(benlesh): remove bind call here.\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bound, sanitizer, true, loadComponentRenderer);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = selectView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            selectView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵselect(0);\n     *        ɵɵtextBinding(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ngInjectableDef = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.3+50.sha-70cf8ed.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = selectView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                selectView(oldLView, null);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 32 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        var expression = bind(lView, value);\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        if (placeholders !== undefined && Object.keys(placeholders).length) {\n            return input.replace(LOCALIZE_PH_REGEXP, function (_, key) { return placeholders[key] || ''; });\n        }\n        return input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error_1.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var facade = directiveMetadata(type, directive || {});\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeNode.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element);\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        if (element) {\n            var context = loadLContextFromNode(element);\n            var lView = context.lView;\n            var tData = lView[TVIEW].data;\n            var tNode = tData[context.nodeIndex];\n            if (isClassBased) {\n                return isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true).values :\n                    stylingMapToStringMap(tNode.classes);\n            }\n            else {\n                return isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView, false).values :\n                    stylingMapToStringMap(tNode.styles);\n            }\n        }\n        return {};\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}