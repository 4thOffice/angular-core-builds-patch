{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","pipes","directiveTypes","directives","declaredInputs","encapsulation","Emulated","styles","animations","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","invertObject","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","extractDirectiveDef","pipeDefs","extractPipeDef","selectors","viewQuery","features","viewProviders","id","feature","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","stringify$1","loadInternal","arr","readElementValue","getNative","tNode","hostView","getLNode","native","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isLContainer","getRootView","lViewData","readPatchedLViewData","readPatchedData","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","findViaNativeElement","existingCtx","lNode","getLNodeFromViewData","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","lNodeIndex","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","lElementIndex","startIndex","count","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","throwMultipleComponentError","tagName","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentLNode","getHostElementNode","hostTNode","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParentNode","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","parentView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","viewData","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentLNode","parentEl","parentTNode","renderParent","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","lElement","templateStyleContext","getOrCreatePlayerContext","stylingContext","allocPlayerContext","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","executeInitAndContentHooks","createLViewData","blueprint","createNodeAtIndex","parentInSameView","tParent","isState","createTNode","tData","tNode_1","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","generateExpandoBlock","totalHostVars","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","instantiateDirectivesDirectly","clone","addComponentLogic","directiveCreate","saveResolvedLocalsInData","localIndex","directiveCount","elementIndex","NO_CHANGE","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","listen","storeCleanupFn","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","enableBindings","disableBindings","tViews","injectorIndex","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNative","textBinding","existingNode","textContent","directive","baseDirectiveCreate","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","addToViewTree","queueHostBindingForCheck","dirIndex","createLContainer","hostLNode","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","rootContext","nothingScheduled","scheduleTick","res_1","clean","scheduler","playerHandler","flushPlayers","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadQueryList","queryListIdx","load","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","ROOT_EXPANDO_INSTRUCTIONS","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","rootTView","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","setUpBloom","parentLoc","getParentInjectorLocation","parentIndex","getParentInjectorView","parentData","bloomIndex","footer","viewOffset","location","startView","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","getOrCreateNodeInjector","directiveInject","getOrCreateInjectable","injectAttribute","attrNameToInject","bloomHash","bloomHashBitOrFactory","tokenId","startInjectorIndex","injectorView","parentLocation","shouldNotSearchParent","injectorHasToken","searchDirectivesOnInjector","searchMatchesQueuedForCreation","formerInjector","nodeFlags","NodeInjector","_tNode","_hostView","_injectorIndex","setEnvironment","getFactoryOf","typeAny","getInheritedFactory","PublicFeature","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noopFactory","RendererStyleFlags2","R3_ELEMENT_REF_FACTORY$1","R3_TEMPLATE_REF_FACTORY$1","R3_CHANGE_DETECTOR_REF_FACTORY$1","R3_VIEW_CONTAINER_REF_FACTORY$1","R3_RENDERER2_FACTORY$1","ElementRef","nativeElement","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedNode","removedTNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","factoryFn","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµi18nAttribute","Éµi18nExp","Éµi18nStart","Éµi18nEnd","Éµi18nApply","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","R3_COMPILE_COMPONENT","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","R3_COMPILE_DIRECTIVE","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","R3_COMPILE_PIPE","compilePipe","compilePipeFromMetadata","R3_COMPILE_NGMODULE_DEFS","R3_PATCH_COMPONENT_DEF_WTIH_SCOPE","noop","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","R3_COMPILE_COMPONENT$1","R3_COMPILE_DIRECTIVE$1","R3_COMPILE_PIPE$1","USE_VALUE$2","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Version","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","preR3NgModuleCompile","R3_COMPILE_NGMODULE$1","VERSION","full","major","minor","patch","Injectable","preR3InjectableCompile","injectableType","R3_COMPILE_INJECTABLE$1","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","ChangeDetectorRef","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","loadContext","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","CorePlayerHandler","_players","player","play","queuePlayer","Éµangular_packages_core_core_l","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_m","Éµangular_packages_core_core_o","Éµangular_packages_core_core_n","Éµangular_packages_core_core_r","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_w","Éµangular_packages_core_core_x","Éµangular_packages_core_core_v","Éµangular_packages_core_core_bf","Éµangular_packages_core_core_be","Éµangular_packages_core_core_y","Éµangular_packages_core_core_z","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_bc","Éµangular_packages_core_core_s","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$1","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµaddPlayer","addPlayer","elementContext","animationContext","getRootContext","viewOrComponent","ÉµgetPlayers","getPlayers","ÉµcompileNgModuleFactory__POST_NGCC__","compileNgModuleFactory__POST_NGCC__","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","setScopeOnDeclaredComponents","declaration","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__","injectElementRef","ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__","injectTemplateRef","ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","injectChangeDetectorRef","ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","adjustedIdx","_adjustIndex","newIndex","shift","ÉµR3_RENDERER2_FACTORY__POST_NGCC__","injectRenderer2","getOrCreateRenderer2","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-rc.1+41.sha-931e603\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    function getNative(tNode, hostView) {\n        return getLNode(tNode, hostView).native;\n    }\n    // TODO(kara): remove when removing LNode.native\n    function getLNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var lNode = getLNodeFromViewData(lViewData, nodeIndex);\n                var existingCtx = readPatchedData(lNode.native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, lNode.native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var lNode = getLNodeFromViewData(lViewData, index);\n                        var context = createLContext(lViewData, index, lNode.native);\n                        attachPatchData(lNode.native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, lNodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: lNodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var lNodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(lNodeIndex, lViewData);\n            var context = createLContext(lViewData, lNodeIndex, view[HOST].native);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, native) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var lNode = getLNodeFromViewData(lViewData, tNode.index);\n            if (lNode.native === native) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Retruns the instance of the LElementNode at the given index in the LViewData.\n     *\n     * This function will also unwrap the inner value incase it's stuffed into an\n     * array (which is what happens when [style] and [class] bindings are present\n     * in the view instructions for the element being returned).\n     */\n    function getLNodeFromViewData(lViewData, lElementIndex) {\n        var value = lViewData[lElementIndex];\n        return value ? readElementValue(value) : null;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, lNodeIndex) {\n        var tNode = lViewData[TVIEW].data[lNodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] = directiveIndex === -1 ?\n                    getLNodeFromViewData(lViewData, lNodeIndex).native :\n                    lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent LNode of a given node. */\n    function getParentLNode(tNode, currentView) {\n        return tNode.parent == null ? getHostElementNode(currentView) :\n            getLNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host LElementNode given a view. Will return null if the host element is an\n     * LViewNode, since they are being phased out.\n     */\n    function getHostElementNode(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getLNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParentNode, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, parent_1, getNative(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, parent_1, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, parent_1, lContainer[NATIVE], beforeNode);\n                if (renderParentNode)\n                    lContainer[RENDER_PARENT] = renderParentNode;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var parentNode = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        var parent = parentNode ? parentNode.native : null;\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (parent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentLNode(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var parentLNode = getParentLNode(childTNode, currentView);\n        var parentEl = parentLNode ? parentLNode.native : null;\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var renderParent = lContainer[RENDER_PARENT];\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent.native, childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var node = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, node.native, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNative(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parentEl The parent element from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(tNode, child, currentView) {\n        var parentNative = getParentLNode(tNode, currentView).native;\n        if (child !== null && canInsertNativeNode(tNode, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, child) :\n                parentNative.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNative(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData)\n                storageIndex = HOST;\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (ngDevMode && !context) {\n            throw new Error('Only elements that exist in an Angular application can be used for player access');\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return stylingContext[0 /* PlayerContext */] || allocPlayerContext(stylingContext);\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        styles = styles || null;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = classes === context[6 /* PreviousMultiClassValue */];\n        var ignoreAllStyleUpdates = styles === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            context[6 /* PreviousMultiClassValue */] = classes;\n            if (typeof classes == 'string') {\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            }\n        }\n        classes = (classes || EMPTY_OBJ);\n        if (!ignoreAllStyleUpdates) {\n            context[7 /* PreviousMultiStyleValue */] = styles;\n        }\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                context.push(flag, prop, value);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[5 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setEnvironment(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        setHostBindings();\n        var parentFirstTemplatePass = firstTemplatePass;\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings() {\n        if (tView.expandoInstructions) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        if (typeof viewData[bindingRootIndex] === 'number') {\n                            // We've hit an injector. It may or may not exist depending on whether\n                            // there is a public directive on this node.\n                            bindingRootIndex += INJECTOR_SIZE;\n                        }\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        var isState = state != null;\n        var node = { native: native };\n        var tNode;\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in tView.node.\n            tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode_1 = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentTNode) {\n                    previousOrParentTNode.next = tNode_1;\n                }\n            }\n            tNode = tData[adjustedIndex];\n            if (!tView.firstChild && type === 3 /* Element */) {\n                tView.firstChild = tNode;\n            }\n            // Now link ourselves into the tree.\n            if (isParent && previousOrParentTNode) {\n                if (previousOrParentTNode.child == null && parentInSameView ||\n                    previousOrParentTNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentTNode.child = tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components do not save host TNodes)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = tNode;\n            if (lViewData[TVIEW].firstTemplatePass) {\n                lViewData[TVIEW].node = tNode;\n            }\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createNodeAtIndex(-1, 2 /* View */, null, null, null, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings();\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNative; }\n        if (!bindingsEnabled)\n            return;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        generateExpandoBlock(tNode, matches);\n        var totalHostVars = 0;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(totalHostVars);\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoBlock(tNode, matches) {\n        var directiveCount = matches ? matches.length / 2 : 0;\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        if (directiveCount > 0) {\n            (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, directiveCount);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        addComponentLogic(def);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def, null);\n                    }\n                    else {\n                        matches.push(def, null);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            return directiveCreate(matches[valueIndex] = viewData.length, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, def) {\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                // Component view must be set on node before the factory is created so\n                // ChangeDetectorRefs have a way to store component view on creation.\n                if (def.template) {\n                    addComponentLogic(def);\n                }\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var tNode = previousOrParentTNode;\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(tNode, viewData) : viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNative(previousOrParentTNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = getTNode(index, viewData);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: parent ? parent.injectorIndex : -1,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index, viewData), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index, viewData), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, viewData), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index, viewData), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var native = getNative(previousOrParentTNode, viewData);\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, native);\n        if (directiveDef.template) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(def) {\n        var native = getNative(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular LNode, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (firstTemplatePass) {\n            queueComponentIndexForCheck();\n            previousOrParentTNode.flags =\n                viewData.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, native) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        viewData[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if (flags === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n            tView.data.push(directiveDef);\n            tView.blueprint.push(null);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index, directiveDef);\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostLNode The host node for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostLNode, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostLNode,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs, null);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = viewData[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        var currentView = viewData;\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createNodeAtIndex(viewBlockId, 2 /* View */, null, null, null, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, viewData);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= 1 /* DetectChanges */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = viewData.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Root component will always have an element index of 0 and an injector size of 1\n    var ROOT_EXPANDO_INSTRUCTIONS = [0, 1];\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(componentView, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null, componentView);\n        if (tView.firstTemplatePass) {\n            tView.expandoInstructions = ROOT_EXPANDO_INSTRUCTIONS.slice();\n            if (def.diPublic)\n                def.diPublic(def);\n            tNode.flags =\n                rootView.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at next index in viewData\n        var component = baseDirectiveCreate(rootView.length, componentDef.factory(), componentDef, hostRNode);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (rootView[TVIEW].firstTemplatePass)\n            prefillHostVars(componentDef.hostVars);\n        setHostBindings();\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 15 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$1(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$1(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        if (tView.firstTemplatePass) {\n            var id = type[NG_ELEMENT_ID];\n            // Set a unique ID on the directive type, so if something tries to inject the directive,\n            // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n            if (id == null) {\n                id = type[NG_ELEMENT_ID] = nextNgElementId++;\n            }\n            // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n            // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n            var bloomBit = id & BLOOM_MASK;\n            // Create a mask that targets the specific bit associated with the directive.\n            // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n            // to bit positions 0 - 31 in a 32 bit integer.\n            var mask = 1 << bloomBit;\n            // Use the raw bloomBit number to determine which bloom filter bucket we should check\n            // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n            var b7 = bloomBit & 0x80;\n            var b6 = bloomBit & 0x40;\n            var b5 = bloomBit & 0x20;\n            var tData = tView.data;\n            if (b7) {\n                b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n            }\n            else {\n                b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n            }\n        }\n    }\n    function getOrCreateNodeInjector() {\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            setUpBloom(tView.data, tNode); // foundation for node bloom\n            setUpBloom(hostView, null); // foundation for cumulative bloom\n            setUpBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = parentLoc & 32767 /* InjectorIndexMask */;\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var parentData = parentView[TVIEW].data;\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (parentLoc !== -1) {\n            for (var i = 0; i < PARENT_INJECTOR; i++) {\n                var bloomIndex = parentIndex + i;\n                // Creates a cumulative bloom filter that merges the parent's bloom filter\n                // and its own cumulative bloom (which contains tokens for all ancestors)\n                hostView[injectorIndex + i] = parentView[bloomIndex] | parentData[bloomIndex];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function setUpBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = location >> 15 /* ViewOffsetShift */;\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, def) {\n        bloomAdd(injectorIndex, view[TVIEW], def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), _getViewData(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var hostTNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(hostTNode, _getViewData(), token, flags);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(hostTNode, hostView, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function')\n            return bloomHash();\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash != null) {\n            var startInjectorIndex = getInjectorIndex(hostTNode, hostView);\n            var injectorIndex = startInjectorIndex;\n            var injectorView = hostView;\n            var parentLocation = -1;\n            // If we should skip this injector or if an injector doesn't exist on this node (e.g. all\n            // directives on this node are private), start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */ || injectorIndex === -1) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(hostTNode, hostView) :\n                    injectorView[injectorIndex + PARENT_INJECTOR];\n                if (shouldNotSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                    injectorView = getParentInjectorView(parentLocation, injectorView);\n                }\n            }\n            while (injectorIndex !== -1) {\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match. Outer loop is necessary in case we get a false positive injector.\n                while (injectorIndex !== -1) {\n                    // Check the current injector. If it matches, stop searching for an injector.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView[TVIEW].data)) {\n                        break;\n                    }\n                    parentLocation = injectorView[injectorIndex + PARENT_INJECTOR];\n                    if (shouldNotSearchParent(flags, parentLocation)) {\n                        injectorIndex = -1;\n                        break;\n                    }\n                    // If the ancestor bloom filter value has the bit corresponding to the directive, traverse\n                    // up to find the specific injector. If the ancestor bloom filter does not have the bit, we\n                    // can abort.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView)) {\n                        injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        injectorView = getParentInjectorView(parentLocation, injectorView);\n                    }\n                    else {\n                        injectorIndex = -1;\n                        break;\n                    }\n                }\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (injectorIndex === -1) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var instance = void 0;\n                if (instance = searchDirectivesOnInjector(injectorIndex, injectorView, token)) {\n                    return instance;\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                if (injectorIndex === startInjectorIndex && hostView === injectorView &&\n                    (instance = searchMatchesQueuedForCreation(token, injectorView[TVIEW]))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // Traverse up the tree and continue searching.\n                injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                injectorView = getParentInjectorView(parentLocation, injectorView);\n            }\n        }\n        var moduleInjector = hostView[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(token, hostTView) {\n        var matches = hostTView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches);\n                }\n            }\n        }\n        return null;\n    }\n    function searchDirectivesOnInjector(injectorIndex, injectorView, token) {\n        var tNode = injectorView[TVIEW].data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var count = nodeFlags & 4095 /* DirectiveCountMask */;\n        if (count !== 0) {\n            var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var defs = injectorView[TVIEW].data;\n            for (var i = start; i < end; i++) {\n                // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                // and matches the given token, return the directive instance.\n                var directiveDef = defs[i];\n                if (directiveDef.type === token && directiveDef.diPublic) {\n                    return injectorView[i];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function injectorHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldNotSearchParent(flags, parentLocation) {\n        return flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ && (parentLocation >> 15 /* ViewOffsetShift */) > 0);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setEnvironment(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNative(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, _getViewData());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        var parentTNode = parentView[TVIEW].data[parentIndex];\n                        return parentLocation === -1 ? new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, comment, true);\n            appendChild(comment, hostTNode, hostView);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(_getViewData());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY = injectElementRef;\n    var R3_TEMPLATE_REF_FACTORY = injectTemplateRef;\n    var R3_CHANGE_DETECTOR_REF_FACTORY = injectChangeDetectorRef;\n    var R3_VIEW_CONTAINER_REF_FACTORY = injectViewContainerRef;\n    var R3_RENDERER2_FACTORY = injectRenderer2;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noopFactory() {\n        var tokens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tokens[_i] = arguments[_i];\n        }\n    }\n    var R3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY;\n    var R3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY;\n    var R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY;\n    var R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY;\n    var R3_RENDERER2_FACTORY__POST_NGCC__ = R3_RENDERER2_FACTORY;\n    var R3_ELEMENT_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_TEMPLATE_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_CHANGE_DETECTOR_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_VIEW_CONTAINER_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_RENDERER2_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_ELEMENT_REF_FACTORY$1 = R3_ELEMENT_REF_FACTORY__PRE_NGCC__;\n    var R3_TEMPLATE_REF_FACTORY$1 = R3_TEMPLATE_REF_FACTORY__PRE_NGCC__;\n    var R3_CHANGE_DETECTOR_REF_FACTORY$1 = R3_CHANGE_DETECTOR_REF_FACTORY__PRE_NGCC__;\n    var R3_VIEW_CONTAINER_REF_FACTORY$1 = R3_VIEW_CONTAINER_REF_FACTORY__PRE_NGCC__;\n    var R3_RENDERER2_FACTORY$1 = R3_RENDERER2_FACTORY__PRE_NGCC__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return R3_ELEMENT_REF_FACTORY$1(ElementRef); };\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return R3_RENDERER2_FACTORY$1(); };\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createNodeAtIndex(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNative(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedNode = loadElement(removeIndex);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedNode.native || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return R3_TEMPLATE_REF_FACTORY$1(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind2,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµi18nAttribute': i18nAttribute,\n        'Éµi18nExp': i18nExp,\n        'Éµi18nStart': i18nStart,\n        'Éµi18nEnd': i18nEnd,\n        'Éµi18nApply': i18nApply,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    var animations = metadata.animations !== null ? new compiler.WrappedNodeExpr(metadata.animations) : null;\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: animations }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var Éµ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$1 });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n    var R3_COMPILE_NGMODULE_DEFS = compileNgModuleDefs;\n    var R3_PATCH_COMPONENT_DEF_WTIH_SCOPE = patchComponentDefWithScope;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() { }\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var R3_COMPILE_COMPONENT__PRE_NGCC__ = noop;\n    var R3_COMPILE_DIRECTIVE__PRE_NGCC__ = noop;\n    var R3_COMPILE_INJECTABLE__PRE_NGCC__ = preR3InjectableCompile;\n    var R3_COMPILE_NGMODULE__PRE_NGCC__ = preR3NgModuleCompile;\n    var R3_COMPILE_PIPE__PRE_NGCC__ = noop;\n    var ivyEnable__PRE_NGCC__ = false;\n    var ivyEnabled$1 = ivyEnable__PRE_NGCC__;\n    var R3_COMPILE_COMPONENT$1 = R3_COMPILE_COMPONENT__PRE_NGCC__;\n    var R3_COMPILE_DIRECTIVE$1 = R3_COMPILE_DIRECTIVE__PRE_NGCC__;\n    var R3_COMPILE_INJECTABLE$1 = R3_COMPILE_INJECTABLE__PRE_NGCC__;\n    var R3_COMPILE_NGMODULE$1 = R3_COMPILE_NGMODULE__PRE_NGCC__;\n    var R3_COMPILE_PIPE$1 = R3_COMPILE_PIPE__PRE_NGCC__;\n    ////////////////////////////////////////////////////////////\n    // Glue code which should be removed after Ivy is default //\n    ////////////////////////////////////////////////////////////\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var Éµ0$2 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: Éµ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE$1(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT$1(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE$1(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-rc.1+41.sha-931e603');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_NGCC__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return R3_VIEW_CONTAINER_REF_FACTORY$1(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return R3_CHANGE_DETECTOR_REF_FACTORY$1(); };\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (ivyEnabled$1 ? this.createDebugContext(el) : null);\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lViewData);\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function addPlayer(ref, player) {\n        var elementContext = getContext(ref);\n        var animationContext = getOrCreatePlayerContext(elementContext.native, elementContext);\n        animationContext.push(player);\n        player.addEventListener(200 /* Destroyed */, function () {\n            var index = animationContext.indexOf(player);\n            if (index >= 0) {\n                animationContext.splice(index, 1);\n            }\n            player.destroy();\n        });\n        var rootContext = getRootContext(elementContext.lViewData);\n        var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n        playerHandler.queuePlayer(player, ref);\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        // change detection may or may not happen therefore\n        // the core code needs to be kicked off to flush the animations\n        rootContext.flags |= 2 /* FlushPlayers */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    function getPlayers(ref) {\n        return getOrCreatePlayerContext(ref);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_l = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_i = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_j = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_k = _localeFactory;\n    exports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_g = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_h = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_d = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_m = wtfEnabled;\n    exports.Éµangular_packages_core_core_o = createScope;\n    exports.Éµangular_packages_core_core_n = detectWTF;\n    exports.Éµangular_packages_core_core_r = endTimeRange;\n    exports.Éµangular_packages_core_core_p = leave;\n    exports.Éµangular_packages_core_core_q = startTimeRange;\n    exports.Éµangular_packages_core_core_bb = NG_INJECTABLE_DEF;\n    exports.Éµangular_packages_core_core_w = _getViewData;\n    exports.Éµangular_packages_core_core_x = bindingUpdated;\n    exports.Éµangular_packages_core_core_v = getPreviousOrParentTNode;\n    exports.Éµangular_packages_core_core_bf = getOrCreatePlayerContext;\n    exports.Éµangular_packages_core_core_be = loadInternal;\n    exports.Éµangular_packages_core_core_y = createElementRef;\n    exports.Éµangular_packages_core_core_z = createTemplateRef;\n    exports.Éµangular_packages_core_core_ba = createViewRef;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_bc = getClosureSafeProperty;\n    exports.Éµangular_packages_core_core_s = _def;\n    exports.Éµangular_packages_core_core_t = DebugRendererFactory2;\n    exports.Éµangular_packages_core_core_u = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled$1;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nAttribute = i18nAttribute;\n    exports.Éµi18nExp = i18nExp;\n    exports.Éµi18nStart = i18nStart;\n    exports.Éµi18nEnd = i18nEnd;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = R3_COMPILE_NGMODULE_DEFS;\n    exports.ÉµpatchComponentDefWithScope = R3_PATCH_COMPONENT_DEF_WTIH_SCOPE;\n    exports.ÉµcompileComponent = R3_COMPILE_COMPONENT;\n    exports.ÉµcompileDirective = R3_COMPILE_DIRECTIVE;\n    exports.ÉµcompilePipe = R3_COMPILE_PIPE;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_NGCC__ = compileNgModuleFactory__POST_NGCC__;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_RENDERER2_FACTORY__POST_NGCC__ = R3_RENDERER2_FACTORY__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}