{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","apply","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","queueLifecycleHooks","tView","firstTemplatePass","start","end","def","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","loadInternal","readElementValue","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","projectionNodeIndex","nextNode","parent_1","native","nodeType","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","grandParentContainer","appendChild","renderParent","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","setFlag","getProp","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","rendererFactory","previousOrParentNode","isParent","currentQueries","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","fill","CIRCULAR$1","currentElementNode","getRenderer","getCurrentSanitizer","getViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","enterView","newView","host","oldView","leaveView","creationOnly","refreshView","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","sanitizer","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","namespaceHTML","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","createElement","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","NO_CHANGE","element_1","loadElement","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","styleDeclarations","classDeclarations","createStylingContextTemplate","initialStyleDeclarations","initialClassDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","allocStylingContext","lElement","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffixOrSanitizer","valueToAdd","elementStylingMap","styles","classes","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","grandparent","currentComponentHost","firstProjectedNode","lNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","hostTView","createViewQuery","updateViewQuery","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolationV","different","content","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","loadDirective","loadElementInternal","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","ngInjectorDef","ngModule","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","definePipe","pipeDef","pure","fillProperties","PRIVATE_PREFIX","NgOnChangesFeature","definition","declaredToMinifiedInputs","proto","_loop_1","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","notImplemented","insert","move","newIndex","shift","_tView","_renderer","_queries","createEmbeddedViewNode","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$1","ComponentRef$$1","destroyCbs","location","i18nTagRegex","appendI18nNode","previousNode","NgModuleRef","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","NgModuleFactory$$1","moduleType","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","clone","query","containerValues","clonedQuery","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","ÉµInheritDefinitionFeature","InheritDefinitionFeature","superType","getSuperType","superDef","e_1","isComponentDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","e_1_1","return","superPrototype","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµcp","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµrS","Éµs","Éµsm","Éµsp","Éµsa","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","trim","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable","hasAProvider","expression","computeProvidedIn","jitExpression","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponent","maybeQueueResolutionOfComponentResources","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","ngSelectorScope","Pipe","compilePipe","compilePipeFromMetadata","Input","Output","HostBinding","HostListener","NgModule","compileNgModule","emitInline","compileInjector","declaration","preR3NgModuleCompile","VERSION","full","major","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","_c","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµQr","registerContentQuery","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","Éµql","loadQueryList","queryListIdx","Éµst","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI","i18nInterpolation","numberOfExp","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","tmplContainers","lastChildIndex","generateMappingInstructions","translationParts","tmplIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","phIndex","tmplElements","phKeys","ph","tmplExpressions","index_2","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-rc.3+16.sha-b8f740b\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakeable Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, chainFn, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            var TypeDecorator = function TypeDecorator(cls) {\n                typeFn && typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                return cls;\n            };\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n            };\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            debugger;\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 16;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 14 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n        function ngDevModeResetPerfCounters() {\n            global['ngDevMode'] = {\n                firstTemplatePass: 0,\n                tNode: 0,\n                tView: 0,\n                rendererCreateTextNode: 0,\n                rendererSetText: 0,\n                rendererCreateElement: 0,\n                rendererAddEventListener: 0,\n                rendererSetAttribute: 0,\n                rendererRemoveAttribute: 0,\n                rendererSetProperty: 0,\n                rendererSetClassName: 0,\n                rendererAddClass: 0,\n                rendererRemoveClass: 0,\n                rendererSetStyle: 0,\n                rendererRemoveStyle: 0,\n                rendererDestroy: 0,\n                rendererDestroyNode: 0,\n                rendererMoveNode: 0,\n                rendererRemoveNode: 0,\n            };\n        }\n        ngDevModeResetPerfCounters();\n        return ngDevModeResetPerfCounters;\n    })(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global));\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Must use this method for CD (instead of === ) since NaN !== NaN\n    */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     *  Function that throws a \"not implemented\" error so it's clear certain\n     *  behaviors/methods aren't yet ready.\n     *\n     * @returns Not implemented error\n     */\n    function notImplemented() {\n        return new Error('NotImplemented');\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is an element.\n            if (parent.view !== currentView) {\n                // If the Parent view is not the same as current view than we are inserting across\n                // Views. This happens when we insert a root element of the component view into\n                // the component host element and it should always be eager.\n                return true;\n            }\n            // Parent elements can be a component which may have projection.\n            if (parent.data === null) {\n                // Parent is a regular non-component element. We should eagerly insert into it\n                // since we know that this relationship will never be broken.\n                return true;\n            }\n            else {\n                // Parent is a Component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would than move it to its final destination.\n                return false;\n            }\n        }\n        else {\n            // Parent is a View.\n            ngDevMode && assertNodeType(parent, 2 /* View */);\n            // Because we are inserting into a `View` the `View` may be disconnected.\n            var grandParentContainer = getParentLNode(parent);\n            if (grandParentContainer == null) {\n                // The `View` is not inserted into a `Container` we have to delay insertion.\n                return false;\n            }\n            ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n            if (grandParentContainer.data[RENDER_PARENT] == null) {\n                // The parent `Container` itself is disconnected. So we have to delay.\n                return false;\n            }\n            else {\n                // The parent `Container` is in inserted state, so we can eagerly insert into\n                // this location.\n                return true;\n            }\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                isProceduralRenderer(renderer) ?\n                    renderer.insertBefore(renderParent.native, child, beforeNode) :\n                    renderParent.native.insertBefore(child, beforeNode, true);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialStyleDeclarations, initialClassDeclarations) {\n        var initialStylingValues = [null];\n        var context = [null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[3 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 5 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 5 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 5 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 5 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = isClassBased_1 ? 2 /* Class */ : 0 /* None */;\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 2 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     */\n    function updateStylingMap(context, styles, classes) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[4 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[4 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[4 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    if (value !== newValue) {\n                        setValue(context, ctxIndex, newValue);\n                        var flag = getPointers(context, ctxIndex);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = 1 /* Dirty */ | (isClassBased_4 ? 2 /* Class */ : 0 /* None */);\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 5 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (currValue !== value) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[3 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            for (var i = 5 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        setStyle(native, prop, valueToApply, renderer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, store) {\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 5 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 5 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 5 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 3 /* BitMask */) | (staticIndex << 2 /* BitCountSize */) |\n            (dynamicIndex << (15 /* BitCountSize */ + 2 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[1 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 2 /* BitCountSize */) & 32767 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (15 /* BitCountSize */ + 2 /* BitCountSize */)) & 32767 /* BitMask */;\n        return index >= 5 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[2 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 2 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 2 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 2 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 2 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    var rendererFactory;\n    var currentElementNode = null;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries ||\n            (currentQueries =\n                (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                    new QueryType()));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings,\n     * refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshView() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        setHostBindings(tView.hostBindings);\n        refreshContentQueries(tView);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i += 2) {\n                componentRefresh(components[i], components[i + 1]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData && viewData[INJECTOR$1],\n            renderer,\n            sanitizer || null,\n            null,\n            -1,\n            null,\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        try {\n            isParent = true;\n            previousOrParentNode = null;\n            oldView = enterView(viewNode.data, viewNode);\n            namespaceHTML();\n            tView.template(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshView();\n            }\n            else {\n                viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n            // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n            var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(oldView, isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n        return viewNode;\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshView();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(0, HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native;\n        if (isProceduralRenderer(renderer)) {\n            native = renderer.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = renderer.createElement(name);\n            }\n            else {\n                native = renderer.createElementNS(_currentNamespace, name);\n            }\n        }\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        currentElementNode = node;\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(dirIndex) {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n        currentElementNode = null;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     */\n    function elementStyling(styleDeclarations, classDeclarations) {\n        var lElement = currentElementNode;\n        var tNode = lElement.tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(styleDeclarations, classDeclarations);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    function elementStyleProp(index, styleIndex, value, suffixOrSanitizer) {\n        var valueToAdd = null;\n        if (value) {\n            valueToAdd =\n                typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string') {\n                valueToAdd = valueToAdd + suffixOrSanitizer;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     */\n    function elementStylingMap(index, styles, classes) {\n        updateStylingMap(getStylingContext(index), styles, classes);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck(directiveIndex);\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 14 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews = template ?\n                createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n                [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        queries && queries.addNode(node); // check if a given container node matches\n        queueLifecycleHooks(node.tNode.flags, tView);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = loadElement(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshView();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(directiveIndex, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            ngDevMode && assertDataInRange(directiveIndex, directives);\n            detectChangesInternal(hostView, element, directives[directiveIndex]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var template = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            template(getRenderFlags(hostView), component);\n            refreshView();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation bindings with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        var component;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, throw.\n            if (def == null) {\n                throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || [],\n            declarations: def.declarations || [],\n            imports: def.imports || [],\n            exports: def.exports || [],\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    var EMPTY$1 = {};\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        var _loop_1 = function () {\n            var e_1, _a;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            if (superDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType && !superDef) {\n            _loop_1();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    }\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef(viewNode, template, context) {\n            var _this = _super.call(this, viewNode.data, context) || this;\n            _this._viewContainerRef = null;\n            _this._lViewNode = viewNode;\n            return _this;\n        }\n        EmbeddedViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            _super.prototype.destroy.call(this);\n        };\n        EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        // This means that after 255, some directives will share slots, leading to some false positives\n        // when checking for a directive's presence.\n        var bloomBit = id % BLOOM_SIZE;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        if (bloomBit < 128) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n                (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n        }\n        else {\n            bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n                (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 14 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Searches for an instance of the given directive type up the injector tree and returns\n     * that instance if found.\n     *\n     * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n     * checks that bit against the bloom filter structure to identify an injector that might have\n     * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n     * for a match.\n     *\n     * If not found, it will propagate up to the next parent injector until the token\n     * is found or the top is reached.\n     *\n     * @param di Node injector where the search should start\n     * @param token The directive type to search for\n     * @param flags Injection flags (e.g. CheckParent)\n     * @returns The instance found\n     */\n    function getOrCreateInjectable(di, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic). If there is no hash, fall back to the module injector.\n        if (bloomHash === null) {\n            var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n            var formerInjector = setCurrentInjector(moduleInjector);\n            try {\n                return inject(token, flags);\n            }\n            finally {\n                setCurrentInjector(formerInjector);\n            }\n        }\n        else {\n            var injector = di;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        // No directive was found for the given token.\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a directive type, this function returns the bit in an injector's bloom filter\n     * that should be used to determine whether or not the directive is present.\n     *\n     * When the directive was added to the bloom filter, it was given a unique ID that can be\n     * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n     * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n     * BLOOM_SIZE is reached).\n     *\n     * @param type The directive type\n     * @returns The bloom bit to check for the directive\n     */\n    function bloomHashBit(type) {\n        var id = type[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id % BLOOM_SIZE : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                    (bloomBit < 96 ? injector.bf2 : injector.bf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                    (bloomBit < 224 ? injector.bf6 : injector.bf7);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if ((value & mask) === mask) {\n                return injector;\n            }\n            else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                    (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                    (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            injector = (value & mask) ? injector.parent : null;\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef(lContainerNode);\n        }\n        return di.viewContainerRef;\n    }\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef(_lContainerNode) {\n            this._lContainerNode = _lContainerNode;\n            this._viewRefs = [];\n        }\n        ViewContainerRef.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n            throw notImplemented();\n        };\n        ViewContainerRef.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            var lViewNode = detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef(elementRef, _tView, _renderer, _queries) {\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n            this.elementRef = elementRef;\n        }\n        TemplateRef.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            return new EmbeddedViewRef(viewNode, this._tView.template, context);\n        };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n            var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            // TODO(misko): this is the wrong injector here.\n            return new ComponentRef$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n             * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n             * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n             * given component won't work (as these are always called at the level above a component).\n             *\n             * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n             * component instance. So passing in the root view (1 level above the component) is sufficient.\n             * We might  want to think about creating a fake component for the top level? Or overwrite\n             * detectChanges with a function that calls tickRootContext? */\n            _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n            _this.injector = injector;\n            _this.location = new ElementRef$1(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /\\{\\$([^}]+)\\}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param tmplContainers An array of template container placeholders whose content should be ignored\n     * when generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, tmplContainers, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var instructions = [];\n        generateMappingInstructions(0, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param index The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param tmplContainers An array of template container placeholders whose content should be ignored\n     * when generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex) {\n        var tmplIndex = instructions.length;\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        instructions.push(tmplInstructions);\n        for (; index < translationParts.length; index++) {\n            var value = translationParts[index];\n            // Odd indexes are placeholders\n            if (index & 1) {\n                var phIndex = void 0;\n                if (elements && elements[tmplIndex] &&\n                    typeof (phIndex = elements[tmplIndex][value]) !== 'undefined') {\n                    // The placeholder represents a DOM element\n                    // Add an instruction to move the element\n                    tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                    phVisited.push(value);\n                    openedTagCount++;\n                }\n                else if (expressions && expressions[tmplIndex] &&\n                    typeof (phIndex = expressions[tmplIndex][value]) !== 'undefined') {\n                    // The placeholder represents an expression\n                    // Add an instruction to move the expression\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else { // It is a closing tag\n                    tmplInstructions.push(-2147483648 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (typeof phIndex !== 'undefined' && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (tmplContainers && tmplContainers.indexOf(value) !== -1 &&\n                    tmplContainers.indexOf(value) >= tmplIndex) {\n                    index = generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Check if some elements from the template are missing from the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index_1 = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index_1 | -1610612736 /* RemoveNode */);\n                        if (index_1 > maxIndex) {\n                            maxIndex = index_1;\n                        }\n                    }\n                }\n            }\n        }\n        // Check if some expressions from the template are missing from the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index_2 = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index_2.toString(2).length, 28, \"Index \" + index_2 + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index_2 | -1610612736 /* RemoveNode */);\n                        if (index_2 > maxIndex) {\n                            maxIndex = index_2;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                // We consider those additional placeholders as expressions because we don't care about\n                // their children, all we need to do is to append them\n                tmplInstructions.push(i | 1610612736 /* Expression */);\n            }\n        }\n        return index;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            // (node.native as RComment).textContent = 'test';\n            // console.log(node.native);\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                    var expr = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(expr, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -2147483648 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -1610612736 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation(instructions, numberOfExp, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var different = bindingUpdated(v0);\n        if (numberOfExp > 1) {\n            different = bindingUpdated(v1) || different;\n            if (numberOfExp > 2) {\n                different = bindingUpdated(v2) || different;\n                if (numberOfExp > 3) {\n                    different = bindingUpdated(v3) || different;\n                    if (numberOfExp > 4) {\n                        different = bindingUpdated(v4) || different;\n                        if (numberOfExp > 5) {\n                            different = bindingUpdated(v5) || different;\n                            if (numberOfExp > 6) {\n                                different = bindingUpdated(v6) || different;\n                                if (numberOfExp > 7) {\n                                    different = bindingUpdated(v7) || different;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            var value = void 0;\n            // Odd indexes are placeholders\n            if (i & 1) {\n                switch (instructions[i]) {\n                    case 0:\n                        value = v0;\n                        break;\n                    case 1:\n                        value = v1;\n                        break;\n                    case 2:\n                        value = v2;\n                        break;\n                    case 3:\n                        value = v3;\n                        break;\n                    case 4:\n                        value = v4;\n                        break;\n                    case 5:\n                        value = v5;\n                        break;\n                    case 6:\n                        value = v6;\n                        break;\n                    case 7:\n                        value = v7;\n                        break;\n                }\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n         * delivers events synchronously or asynchronously.\n         *\n         * @param isAsync By default, events are delivered synchronously (default value: `false`).\n         * Set to `true` for asynchronous event delivery.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = query.containerValues;\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 14 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'Éµa': elementAttribute,\n        'Éµb': bind,\n        'ÉµC': container,\n        'ÉµcR': containerRefreshStart,\n        'Éµcr': containerRefreshEnd,\n        'Éµd': loadDirective,\n        'ÉµNH': namespaceHTML,\n        'ÉµNM': namespaceMathML,\n        'ÉµNS': namespaceSVG,\n        'ÉµE': elementStart,\n        'Éµe': elementEnd,\n        'ÉµEe': element,\n        'Éµf0': pureFunction0,\n        'Éµf1': pureFunction1,\n        'Éµf2': pureFunction2,\n        'Éµf3': pureFunction3,\n        'Éµf4': pureFunction4,\n        'Éµf5': pureFunction5,\n        'Éµf6': pureFunction6,\n        'Éµf7': pureFunction7,\n        'Éµf8': pureFunction8,\n        'ÉµfV': pureFunctionV,\n        'Éµi1': interpolation1,\n        'Éµi2': interpolation2,\n        'Éµi3': interpolation3,\n        'Éµi4': interpolation4,\n        'Éµi5': interpolation5,\n        'Éµi6': interpolation6,\n        'Éµi7': interpolation7,\n        'Éµi8': interpolation8,\n        'ÉµiV': interpolationV,\n        'Éµcp': elementClassProp,\n        'ÉµL': listener,\n        'Éµld': load,\n        'ÉµP': projection,\n        'Éµp': elementProperty,\n        'Éµpb1': pipeBind1,\n        'Éµpb2': pipeBind2,\n        'Éµpb3': pipeBind3,\n        'Éµpb4': pipeBind4,\n        'ÉµpbV': pipeBindV,\n        'ÉµpD': projectionDef,\n        'ÉµPp': pipe,\n        'ÉµQ': query,\n        'ÉµqR': queryRefresh,\n        'ÉµrS': reserveSlots,\n        'Éµs': elementStyling,\n        'Éµsm': elementStylingMap,\n        'Éµsp': elementStyleProp,\n        'Éµsa': elementStylingApply,\n        'ÉµT': text,\n        'Éµt': textBinding,\n        'ÉµV': embeddedViewStart,\n        'Éµv': embeddedViewEnd,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    function compileNgModule(type, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(type, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(type),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                        declarations: declarations.map(wrap),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n                }\n                return ngModuleDef;\n            },\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(type, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: type.name,\n                        type: wrap(type),\n                        deps: reflectDependencies(type),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$3),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$3,\n                            ngModule.exports || EMPTY_ARRAY$3,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectorDef.js\");\n                }\n                return ngInjectorDef;\n            },\n        });\n        declarations.forEach(function (declaration) {\n            // Some declared components may be compiled asynchronously, and thus may not have their\n            // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n            // the `ngSelectorScope` property of the declared type.\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                patchComponentDefWithScope(declaration.ngComponentDef, type);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = type;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, module) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var def = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (def === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        patchComponentDefWithScope(def, type.ngSelectorScope);\n                    }\n                }\n                return def;\n            },\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var def = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n                }\n                return def;\n            },\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, meta) {\n        // TODO(alxhub): handle JIT of bare @Injectable().\n        if (!meta) {\n            return;\n        }\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var deps = undefined;\n                    if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                        deps = reflectDependencies(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps) || [];\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var expression = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        deps: deps,\n                    }).expression;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var def = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl);\n                }\n                return def;\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (R3_COMPILE_PIPE || (function () { }))(type, meta); });\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     */\n    function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('6.1.0-rc.3+16.sha-b8f740b');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    isPeriodic: t.data.isPeriodic,\n                    delay: t.data.delay,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    // Added by Zones for XHRs\n                    // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                    xhr: t.data.target\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler$$1 = compilerFactory.createCompiler([options]);\n            return compiler$$1.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef$1 = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef$1(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef$1));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef$1);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\n    var TemplateRefTokenKey = tokenKey(TemplateRef$1);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            var def = resolveDefinition(this._ngModuleDefFactory);\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (unsafeResourceUrl instanceof String &&\n            unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, 'Html');\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, 'Style');\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, 'Script');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, 'Url');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef$1;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef$1;\n    exports.ViewContainerRef = ViewContainerRef$1;\n    exports.EmbeddedViewRef = EmbeddedViewRef$1;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.ÉµQr = registerContentQuery;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµql = loadQueryList;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyling;\n    exports.Éµsm = elementStylingMap;\n    exports.Éµsp = elementStyleProp;\n    exports.Éµsa = elementStylingApply;\n    exports.Éµcp = elementClassProp;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµiA = i18nApply;\n    exports.ÉµiEM = i18nExpMapping;\n    exports.ÉµiI = i18nInterpolation;\n    exports.ÉµIV = i18nInterpolationV;\n    exports.ÉµiM = i18nMapping;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}