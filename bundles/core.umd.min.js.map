{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","USE_VALUE$2","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","render2CompileInjectable","injectableType","throwMultipleComponentError","tNode","tagName","throwMixedMultiProviderError","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$1","NULL_INJECTOR","getNullInjector","createInjector","defType","parent","additionalProviders","R3Injector","_this","records","Map","injectorDefTypes","Set","onDestroy","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","set","makeRecord","isRootInjector","has","enumerable","configurable","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","ngModule","isDuplicate","add","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","console","warn","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","input","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","slice","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multiProvider","multiProviderMixError","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ɵChangeDetectorStatus","ViewEncapsulation","componentNeedsResolution","old","response","noSideEffects","EMPTY_OBJ","EMPTY_ARRAY$2","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","throwError","TYPE","ACTIVE_INDEX","NATIVE","CONTAINER_HEADER_OFFSET","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","isStylingContext","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","elementDepthCount","stylingContext","setCachedStylingContext","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","getActiveDirectiveId","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","getActiveDirectiveSuperClassHeight","getActiveDirectiveSuperClassDepth","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","getIsParent","setIsNotParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","getSelectedIndex","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","document","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","getStylingContextFromLView","viewData","storageIndex","wrapper","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrsLength","accumulatedClasses","accumulatedStyles","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","NO_CHANGE","enqueueHostInstruction","priority","instructionFn","instructionFnArgs","buffer","findNextInsertionIndex","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","updateClassMap","classesInput","updateStylingMap","updateStyleMap","stylesInput","entryIsClassBased","isMultiValueCacheHit","newValue","readCachedMapValue","propNames","playerBuilder","ClassAndStylePlayerBuilder","rawValue","playerBuilderPosition","playerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","setPlayerBuilder","applyAll","getMultiClassesStartIndex","getMultiStylesStartIndex","patchStylingMapIntoContext","ctxStart","ctxEnd","cacheValue","dirty","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setContextPlayersDirty","updateClassProp","offset","forceOverride","updateSingleStylingValue","updateStyleProp","isClassBased","singleIndex","getSinglePropIndexValue","currValue","currFlag","currDirective","value_1","currPlayerIndex","newIndex","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","store","DashCase","removeStyle","removeProperty","className","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","initialValue","a","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","keyValues","singlePropOffsetRegistryIndex","offsets","dirs","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","registerMultiMapEntry","count","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","list","selectorListLoop","currentSelectorInList","_currentSanitizer","ELEMENT_MARKER","COMMENT_MARKER","_stylingMode","runtimeIsNewStylingInUse","setCurrentStyleSanitizer","getCurrentStyleSanitizer","MAP_BASED_ENTRY_PROP_NAME","getBindingNameFromIndex","updateContextDirectiveIndex","getConfig","getProp$1","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","getDefaultValue","allowStylingFlush","lockContext","setConfig","isContextLocked","getPropValuesStartPosition","hasValueChanged$1","isStylingValueDefined","getCurrentOrLViewSanitizer","sanitizeUsingSanitizerObject","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","STYLING_INDEX_START_VALUE","currentStyleIndex","currentClassIndex","stylesBitMask","classesBitMask","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","updateBindingData","updateStyleBinding","isMapBased","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","lastValueIndex","applyStyling","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle$1","setClass$1","classList","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","lStylingMap","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","getMapProp","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activeStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","setMapValue","TStylingContextDebug","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","componentLViewDebug","classes","newStyles","newClasses","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","ɵɵselect","selectInternal","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","attrValue","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","selectedIndex","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","tHostNode","getOrCreateTNode","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_previousOrParentTNode","tickRootContext","executeTemplate","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","setNodeStylingTemplate","attrsStartIndex","stylingAttrsStartIndex","executeContentQueries","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","propertyMetadataStartIndex","propertyMetadataEndIndex","initialInputs","tViews","projectionNext","projection","onElementCreationFns","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","applyOnCreateInstructions","fns","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵbind","ɵɵupdateSyntheticHostBinding","bound","ɵɵattribute","ɵɵinterpolationV","isBindingUpdated","ɵɵinterpolation1","v0","ɵɵinterpolation2","i0","v1","ɵɵinterpolation3","i1","v2","ɵɵinterpolation4","i2","v3","ɵɵinterpolation5","i3","v4","ɵɵinterpolation6","i4","v5","ɵɵinterpolation7","i5","v6","ɵɵinterpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","firstView","lContainer","head","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","detachView","removeIndex","viewToDetach","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","isIcuCase","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","viewIndexInContainer","nextViewIndex","tViewNodeChild","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNodes","tProjectionNode","selectorIndex","projectedView","nodeToProject","appendProjectedNode","projectedTNode","projectionView","ngContainerChildTNode","ɵɵcontainer","containerInternal","addTContainerToQueries","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","insertNodeBeforeViews","addNode","comment","createComment","ɵɵreference","getContextLView","ɵɵload","ɵɵdirectiveInject","ɵɵinjectAttribute","_stylingProp","defer","getClassesContext","getStylesContext","_stylingMap","valueHasChanged","normalizeIntoStylingMap","newValues","allValuesTrue","outer","propAtIndex","getActiveDirectiveStylingIndex","getContext","allocTStylingContext","ɵɵstyling","classBindingNames","styleBindingNames","directiveStylingIndex","getActiveDirectiveStylingIndex$1","stylingInit","updateLastDirectiveIndex","initStyling","registerHostDirective","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","staticModeOnly","hyphenateEntries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","ɵɵstyleProp","styleIndex","valueToAdd","resolveStylePropValue$1","getStylingContext","styleProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","classIndex","booleanOrNull","classProp","ɵɵstyleMap","styleInputVal","forceStylesAsString","styleMap","ɵɵclassMap","classInputVal","forceClassesAsString","classMap","ɵɵstylingApply","runtimeAllowOldStyling","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","allowFlush","flushQueue","isContextDirty","flushPlayerBuilders","multiStartIndex","directiveIndex_1","playersStartIndex","playerInsertionIndex","oldPlayer","stylingApply","getRenderer","getNativeFromLView","applyClasses","applyStyles","getCachedStylingContext","ɵɵelementStart","initialStylesIndex","initialClassesIndex","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","registerInitialStylingIntoContext","classesContext","stylesContext","currentQueries","clone","ɵɵelementEnd","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","createView","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","cleanupFn","listen","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextBinding","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","componentRef","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","LocaleDataIndex","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","addAllToArray","items","flatten","dst","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_idx","shift","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","expression","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","LQuery","predicate","containerValues","LQueries_","shallow","deep","track","queryList","descend","read","createLQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","insertBeforeContainer","addMatch","matchingValue","insertBeforeViewMatches","createPredicate","_valuesTree","createQueryListInLView","isStatic","_static","storeCleanupWithContext","ɵɵqueryRefresh","queryListImpl","ɵɵstaticViewQuery","viewQueryInternal","ɵɵviewQuery","ɵɵloadViewQuery","ɵɵcontentQuery","contentQueryInternal","contentQuery","tViewContentQueries","ɵɵstaticContentQuery","ɵɵloadContentQuery","ɵɵtemplateRefExtractor","angularCoreEnv","ɵɵstyleSanitizer","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","lContext","eClasses","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_f","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_b","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bq","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵDEFAULT_LOCALE_ID","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","viewAmount","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.1.0-next.2+20.sha-6c4d912.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$4 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$4);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            stylingProp: 0,\n            stylingPropCacheMiss: 0,\n            stylingApply: 0,\n            stylingApplyCacheMiss: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$1); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$5 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$5, Query);\n    var ɵ1$1 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$1, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$2 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY$2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$2,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ token: type, factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$2,\n            declarations: def.declarations || EMPTY_ARRAY$2,\n            imports: def.imports || EMPTY_ARRAY$2,\n            exports: def.exports || EMPTY_ARRAY$2,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY$2;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY$2;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY$2;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$6 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$6)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    var stylingContext = null;\n    /**\n     * Gets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     */\n    function getCachedStylingContext() {\n        return stylingContext;\n    }\n    /**\n     * Sets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     *\n     * @param context The styling context value that will be stored\n     */\n    function setCachedStylingContext(context) {\n        stylingContext = context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex == null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        setCachedStylingContext(null);\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // remove the styling context from the cache\n        // because we are now on a different element\n        setCachedStylingContext(null);\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements no `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$7 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$7\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$2;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStyleMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `styling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContextFromLView(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContextFromLView(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /*\n     * This file contains the logic to defer all hostBindings-related styling code to run\n     * at a later point, instead of immediately (as is the case with how template-level\n     * styling instructions are run).\n     *\n     * Certain styling instructions, present within directives, components and sub-classed\n     * directives, are evaluated at different points (depending on priority) and will therefore\n     * not be applied to the styling context of an element immediately. They are instead\n     * designed to be applied just before styling is applied to an element.\n     *\n     * (The priority for when certain host-related styling operations are executed is discussed\n     * more within `interfaces/styling.ts`.)\n     */\n    function registerHostDirective(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (!buffer) {\n            buffer = context[8 /* HostInstructionsQueue */] = [DEFAULT_TEMPLATE_DIRECTIVE_INDEX];\n        }\n        buffer[0 /* LastRegisteredDirectiveIndexPosition */] = directiveIndex;\n    }\n    /**\n     * Queues a styling instruction to be run just before `renderStyling()` is executed.\n     */\n    function enqueueHostInstruction(context, priority, instructionFn, instructionFnArgs) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        // Buffer may be null if host element is a template node. In this case, just ignore the style.\n        if (buffer != null) {\n            var index = findNextInsertionIndex(buffer, priority);\n            buffer.splice(index, 0, priority, instructionFn, instructionFnArgs);\n        }\n    }\n    /**\n     * Figures out where exactly to to insert the next host instruction queue entry.\n     */\n    function findNextInsertionIndex(buffer, priority) {\n        for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n            var p = buffer[i + 0 /* DirectiveIndexOffset */];\n            if (p > priority) {\n                return i;\n            }\n        }\n        return buffer.length;\n    }\n    /**\n     * Iterates through the host instructions queue (if present within the provided\n     * context) and executes each queued instruction entry.\n     */\n    function flushQueue(context) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n                var fn = buffer[i + 1 /* InstructionFnOffset */];\n                var args = buffer[i + 2 /* ParamsOffset */];\n                fn.apply(this, args);\n            }\n            buffer.length = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Determines whether or not to allow the host instructions queue to be flushed or not.\n     *\n     * Because the hostBindings function code is unaware of the presence of other host bindings\n     * (as well as the template function) then styling is evaluated multiple times per element.\n     * To prevent style and class values from being applied to the element multiple times, a\n     * flush is only allowed when the last directive (the directive that was registered into\n     * the styling context) attempts to render its styling.\n     */\n    function allowFlush(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            return buffer[0 /* LastRegisteredDirectiveIndexPosition */] ===\n                directiveIndex;\n        }\n        return true;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveIndex);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveIndex) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveIndex, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var isNewDirective = findOrPatchDirectiveIntoRegistry(context, directiveIndex, false, styleSanitizer);\n        if (!isNewDirective) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 10 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `styleProp`\n        // and the `classProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveIndex, staticModeOnly, styleSanitizer) {\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        var singlePropStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        // this means that the directive has already been registered into the registry\n        if (index < directiveRegistry.length &&\n            directiveRegistry[singlePropStartPosition] >= 0)\n            return false;\n        var singlePropsStartIndex = staticModeOnly ? -1 : context[5 /* SinglePropOffsetPositions */].length;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropsStartIndex, styleSanitizer);\n        return true;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi class values to the context.\n     *\n     * This function will iterate over the provided `classesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngClass` and `[class]`\n     * both update the `foo` className value at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateClassMap(context, classesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, classesInput, true, directiveIndex);\n    }\n    /**\n     * Registers the provided multi style values to the context.\n     *\n     * This function will iterate over the provided `stylesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStyleMap(context, stylesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, stylesInput, false, directiveIndex);\n    }\n    function updateStylingMap(context, input, entryIsClassBased, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMap++ : ngDevMode.styleMap++);\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, input))\n            return;\n        input =\n            input === NO_CHANGE ? readCachedMapValue(context, entryIsClassBased, directiveIndex) : input;\n        var element = context[0 /* ElementPosition */];\n        var playerBuilder = input instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(input, element, entryIsClassBased ? 1 /* Class */ : 2 /* Style */) :\n            null;\n        var rawValue = playerBuilder ? input.value : input;\n        // the position is always the same, but whether the player builder gets set\n        // at all (depending if its set) will be reflected in the index value below...\n        var playerBuilderPosition = entryIsClassBased ? 1 /* ClassMapPlayerBuilderPosition */ :\n            3 /* StyleMapPlayerBuilderPosition */;\n        var playerBuilderIndex = playerBuilder ? playerBuilderPosition : 0;\n        var playerBuildersAreDirty = false;\n        if (hasPlayerBuilderChanged(context, playerBuilder, playerBuilderPosition)) {\n            setPlayerBuilder(context, playerBuilder, playerBuilderPosition);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        var startIndex;\n        var endIndex;\n        var propNames;\n        var applyAll = false;\n        if (entryIsClassBased) {\n            if (typeof rawValue == 'string') {\n                propNames = rawValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a className string implies that all those classes are added\n                applyAll = true;\n            }\n            else {\n                propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$2;\n            }\n            startIndex = getMultiClassesStartIndex(context);\n            endIndex = context.length;\n        }\n        else {\n            startIndex = getMultiStylesStartIndex(context);\n            endIndex = getMultiClassesStartIndex(context);\n            propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$2;\n        }\n        var values = (rawValue || EMPTY_OBJ);\n        patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, startIndex, endIndex, propNames, applyAll || values, input, entryIsClassBased);\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMapCacheMiss++ : ngDevMode.styleMapCacheMiss++);\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, true, directiveIndex, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, false, directiveIndex, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveIndex, forceOverride) {\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        ngDevMode && ngDevMode.stylingProp++;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop, null, 1 /* ValidateProperty */)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n            ngDevMode && ngDevMode.stylingPropCacheMiss++;\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var totalPlayersQueued = 0;\n        ngDevMode && ngDevMode.stylingApply++;\n        // this prevents multiple attempts to render style/class values on\n        // the same element...\n        if (allowFlush(context, directiveIndex)) {\n            // all styling instructions present within any hostBindings functions\n            // do not update the context immediately when called. They are instead\n            // queued up and applied to the context right at this point. Why? This\n            // is because Angular evaluates component/directive and directive\n            // sub-class code at different points and it's important that the\n            // styling values are applied to the context in the right order\n            // (see `interfaces/styling.ts` for more information).\n            flushQueue(context);\n            if (isContextDirty(context)) {\n                ngDevMode && ngDevMode.stylingApplyCacheMiss++;\n                // this is here to prevent things like <ng-container [style] [class]>...</ng-container>\n                // or if there are any host style or class bindings present in a directive set on\n                // a container node\n                var native = context[0 /* ElementPosition */];\n                var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n                var multiStartIndex = getMultiStylesStartIndex(context);\n                for (var i = 10 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                    // there is no point in rendering styles that have not changed on screen\n                    if (isDirty(context, i)) {\n                        var flag = getPointers(context, i);\n                        var directiveIndex_1 = getDirectiveIndexFromEntry(context, i);\n                        var prop = getProp(context, i);\n                        var value = getValue(context, i);\n                        var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex_1) : null;\n                        var playerBuilder = getPlayerBuilder(context, i);\n                        var isClassBased = flag & 2 /* Class */ ? true : false;\n                        var isInSingleRegion = i < multiStartIndex;\n                        var valueToApply = value;\n                        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                        // this check implies that a single value was removed and we\n                        // should now defer to a multi value and use that (if set).\n                        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                            // single values ALWAYS have a reference to a multi index\n                            var multiIndex = getMultiOrSingleIndex(flag);\n                            valueToApply = getValue(context, multiIndex);\n                        }\n                        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                        // the initial value will always be a string or null,\n                        // therefore we can safely adopt it in case there's nothing else\n                        // note that this should always be a falsy check since `false` is used\n                        // for both class and style comparisons (styles can't be false and false\n                        // classes are turned off and should therefore defer to their initial values)\n                        // Note that we ignore class-based deferals because otherwise a class can never\n                        // be removed in the case that it exists as true in the initial classes list...\n                        if (!valueExists(valueToApply, isClassBased)) {\n                            valueToApply = getInitialValue(context, flag);\n                        }\n                        // if the first render is true then we do not want to start applying falsy\n                        // values to the DOM element's styling. Otherwise then we know there has\n                        // been a change and even if it's falsy then it's removing something that\n                        // was truthy before.\n                        var doApplyValue = renderer && (isFirstRender ? valueToApply : true);\n                        if (doApplyValue) {\n                            if (isClassBased) {\n                                setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                            }\n                            else {\n                                setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                            }\n                        }\n                        setDirty(context, i, false);\n                    }\n                }\n                if (flushPlayerBuilders) {\n                    var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                    var playerContext = getPlayerContext(context);\n                    var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                    for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                        var builder = playerContext[i];\n                        var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                        var oldPlayer = playerContext[playerInsertionIndex];\n                        if (builder) {\n                            var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                            if (player !== undefined) {\n                                if (player != null) {\n                                    var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                    wasQueued && totalPlayersQueued++;\n                                }\n                                if (oldPlayer) {\n                                    oldPlayer.destroy();\n                                }\n                            }\n                        }\n                        else if (oldPlayer) {\n                            // the player builder has been removed ... therefore we should delete the associated\n                            // player\n                            oldPlayer.destroy();\n                        }\n                    }\n                    setContextPlayersDirty(context, false);\n                }\n                setContextDirty(context, false);\n            }\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value =\n            sanitizer && value ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 10 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[9 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[9 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[9 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop, null, 1 /* ValidateProperty */)) ?\n            4 /* Sanitize */ :\n            0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 2 /* Size */) +\n            0 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 2 /* Size */ +\n            1 /* StyleSanitizerOffset */] ||\n            dirs[1 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached multi-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n    function assertValidDirectiveIndex(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        if (index >= dirs.length ||\n            dirs[index + 0 /* SinglePropValuesIndexOffset */] === -1) {\n            throw new Error('The provided directive is not registered with the styling context');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    var _stylingMode = 0;\n    function runtimeIsNewStylingInUse() {\n        return _stylingMode > 0 /* UseOld */;\n    }\n    function runtimeAllowOldStyling() {\n        return _stylingMode < 2 /* UseNew */;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * This function will also pre-fill the context with data\n     * for map-based bindings.\n     */\n    function allocTStylingContext() {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        return [0 /* Initial */, 0, mapBasedConfig, 0, MAP_BASED_ENTRY_PROP_NAME];\n    }\n    /**\n     * Temporary function that allows for a string-based property name to be\n     * obtained from an index-based property identifier.\n     *\n     * This function will be removed once the new styling refactor code (which\n     * lives inside of `render3/styling_next/`) replaces the existing styling\n     * implementation.\n     */\n    function getBindingNameFromIndex(stylingContext, offset, directiveIndex, isClassBased) {\n        var singleIndex = getSinglePropIndexValue(stylingContext, directiveIndex, offset, isClassBased);\n        return getProp(stylingContext, singleIndex);\n    }\n    function updateContextDirectiveIndex(context, index) {\n        context[1 /* MaxDirectiveIndexPosition */] = index;\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function getProp$1(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return index === context[1 /* MaxDirectiveIndexPosition */];\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function getPropValuesStartPosition(context) {\n        return 5 /* MapBindingsBindingsStartPosition */ +\n            context[3 /* MapBindingsValuesCountPosition */];\n    }\n    function hasValueChanged$1(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return compareValueA !== compareValueB;\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    /**\n     * Returns the current style sanitizer function for the given view.\n     *\n     * The default style sanitizer (which lives inside of `LView`) will\n     * be returned depending on whether the `styleSanitizer` instruction\n     * was called or not prior to any styling instructions running.\n     */\n    function getCurrentOrLViewSanitizer(lView) {\n        var sanitizer = (getCurrentStyleSanitizer() || lView[SANITIZER]);\n        if (sanitizer && typeof sanitizer !== 'function') {\n            setCurrentStyleSanitizer(sanitizer);\n            return sanitizeUsingSanitizerObject;\n        }\n        return sanitizer;\n    }\n    /**\n     * Style sanitization function that internally uses a `Sanitizer` instance to handle style\n     * sanitization.\n     */\n    var sanitizeUsingSanitizerObject = function (prop, value, mode) {\n        var sanitizer = getCurrentStyleSanitizer();\n        if (sanitizer) {\n            if (mode & 2 /* SanitizeOnly */) {\n                return sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n            }\n            else {\n                return true;\n            }\n        }\n        return value;\n    };\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_SIZE_VALUE = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    var STYLING_INDEX_START_VALUE = 1;\n    // the values below are global to all styling code below. Each value\n    // will either increment or mutate each time a styling instruction is\n    // executed. Do not modify the values below.\n    var currentStyleIndex = STYLING_INDEX_START_VALUE;\n    var currentClassIndex = STYLING_INDEX_START_VALUE;\n    var stylesBitMask = 0;\n    var classesBitMask = 0;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : currentClassIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n        if (updated || forceUpdate) {\n            classesBitMask |= 1 << index;\n        }\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : currentStyleIndex++;\n        var sanitizationRequired = isMapBased ?\n            true :\n            (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n        if (updated || forceUpdate) {\n            stylesBitMask |= 1 << index;\n        }\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged$1(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n        if (prop) {\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp$1(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 2 /* MapBindingsPosition */, bindingValue, countId);\n        }\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var lastValueIndex = index + 3 /* BindingsStartOffset */ + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (typeof bindingValue === 'string' && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all class entries in the provided context to the provided element and resets\n     * any counter and/or bitMask values associated with class bindings.\n     *\n     * @returns whether or not the classes were flushed to the element.\n     */\n    function applyClasses(renderer, data, context, element, directiveIndex) {\n        var classesFlushed = false;\n        if (allowStylingFlush(context, directiveIndex)) {\n            var isFirstPass = !isContextLocked(context);\n            isFirstPass && lockContext(context);\n            if (classesBitMask) {\n                // there is no way to sanitize a class value therefore `sanitizer=null`\n                applyStyling(context, renderer, element, data, classesBitMask, setClass$1, null);\n                classesBitMask = 0;\n                classesFlushed = true;\n            }\n            currentClassIndex = STYLING_INDEX_START_VALUE;\n        }\n        return classesFlushed;\n    }\n    /**\n     * Applies all style entries in the provided context to the provided element and resets\n     * any counter and/or bitMask values associated with style bindings.\n     *\n     * @returns whether or not the styles were flushed to the element.\n     */\n    function applyStyles(renderer, data, context, element, directiveIndex, sanitizer) {\n        var stylesFlushed = false;\n        if (allowStylingFlush(context, directiveIndex)) {\n            var isFirstPass = !isContextLocked(context);\n            isFirstPass && lockContext(context);\n            if (stylesBitMask) {\n                applyStyling(context, renderer, element, data, stylesBitMask, setStyle$1, sanitizer);\n                stylesBitMask = 0;\n                stylesFlushed = true;\n            }\n            currentStyleIndex = STYLING_INDEX_START_VALUE;\n            return true;\n        }\n        return stylesFlushed;\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not apart of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        deferredBindingQueue.length && flushDeferredBindings();\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 2 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp$1(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle$1 = function (renderer, native, prop, value) {\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass$1 = function (renderer, native, className, value) {\n        if (className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native.classList.add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native.classList.remove(className);\n            }\n        }\n    };\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `LStylingMap` array\n     * is produced. The `LStylingMap` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 2 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 2 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 2 /* MapBindingsPosition */, currentMapIndex);\n            var lStylingMap = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < lStylingMap.length) {\n                var prop = getMapProp(lStylingMap, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(lStylingMap, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activeStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - The target property was detected and the inner map\n     *   must now \"catch up\" (pointer-wise) up to where the current\n     *   map's cursor is situated.\n     *\n     * - The target property was not detected in the current map\n     *   and must be found in an inner map. This can only be allowed\n     *   if the current map iteration is not set to skip the target\n     *   property.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && isExactMatch && !(currentMode & 4 /* SkipTargetProp */)) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `LStylingMap` array.\n     *\n     * This function will either generate a new `LStylingMap` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `LStylingMap` value (this only happens if `bindingValue`\n     * is an instance of `LStylingMap`).\n     *\n     * If a new key/value map is provided with an old `LStylingMap`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues) {\n        var lStylingMap = Array.isArray(bindingValue) ? bindingValue : [null];\n        lStylingMap[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < lStylingMap.length; j += 2 /* TupleSize */) {\n            setMapValue(lStylingMap, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            outer: for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var value = allValuesTrue ? true : map[prop];\n                for (var j = 1 /* ValuesStartPosition */; j < lStylingMap.length; j += 2 /* TupleSize */) {\n                    var propAtIndex = getMapProp(lStylingMap, j);\n                    if (prop <= propAtIndex) {\n                        if (propAtIndex === prop) {\n                            setMapValue(lStylingMap, j, value);\n                        }\n                        else {\n                            lStylingMap.splice(j, 0, prop, value);\n                        }\n                        continue outer;\n                    }\n                }\n                lStylingMap.push(prop, value);\n            }\n        }\n        return lStylingMap;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 2 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp$1(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 2 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activeStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) {\n                fn(prop, value, bindingIndex || null);\n            };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer ||\n                getCurrentOrLViewSanitizer(this._data));\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        viewQueryStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.viewQueryStartIndex = viewQueryStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        return TView;\n    }());\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = isStylingContext(rawValue) ? null : toDebug(readLViewValue(rawValue));\n                var styles = null;\n                var classes = null;\n                if (runtimeIsNewStylingInUse()) {\n                    styles = tNode.newStyles ? new NodeStylingDebug(tNode.newStyles, lView, false) : null;\n                    classes = tNode.newClasses ? new NodeStylingDebug(tNode.newClasses, lView, true) : null;\n                }\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        selectInternal(lView, index);\n    }\n    function selectInternal(lView, index) {\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    var ɵ0$8 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$8)();\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n        // instruction `i18nStart` and the first node has the index 1 or more\n        if (index === 0 || !tView.firstChild) {\n            tView.firstChild = tNode;\n        }\n        // Now link ourselves into the tree.\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setPreviousOrParentTNode(null, true);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor\n     * inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setPreviousOrParentTNode(null, true);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                executeTemplate(viewToRender, tView.template, getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(hostView, templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(hostView, templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        ɵɵnamespaceHTML();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */) {\n                // When we're updating, have an inherent ɵɵselect(0) so we don't have to generate that\n                // instruction for most update blocks\n                selectInternal(lView, 0);\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // viewQueryStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                viewQueryStartIndex: initialViewLength,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new (ngDevMode ? LViewBlueprint : Array)(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n            // TODO (matsko): rename this to `styles` once the old styling impl is gone\n            newStyles: null,\n            // TODO (matsko): rename this to `classes` once the old styling impl is gone\n            newClasses: null,\n        };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current[ACTIVE_INDEX] === -1 && isLContainer(current)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < current.length; i++) {\n                    var dynamicViewData = current[i];\n                    // The directives and pipes are not needed here as an existing view is only being\n                    // refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n     */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(hostView, templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer, nativeOnly) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var bindReconciledValue = ɵɵbind(value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, nativeOnly);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     *\n     * @codeGenApi\n     */\n    function ɵɵbind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer, nativeOnly) {\n        var index = getSelectedIndex();\n        // TODO(benlesh): remove bind call here.\n        var bound = ɵɵbind(value);\n        if (bound !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bound, sanitizer, nativeOnly, loadComponentRenderer);\n        }\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var bound = ɵɵbind(value);\n        if (bound !== NO_CHANGE) {\n            return elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation1(prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation2(prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolated = ɵɵinterpolationV(values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    var firstView = nodeOrContainer[CONTAINER_HEADER_OFFSET];\n                    if (firstView) {\n                        currentView = firstView;\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                var firstView = lContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView) {\n                    currentView = firstView;\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            lContainer.splice(CONTAINER_HEADER_OFFSET + index, 0, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            lContainer.splice(CONTAINER_HEADER_OFFSET + removeIndex, 1);\n            addRemoveViewFromContainer(viewToDetach, false);\n            if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n                !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n                viewToDetach[QUERIES].removeView();\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode);\n        var renderParent = parent.parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (renderParent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = parent && parent.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then its direct parent node is the renderer.\n            if (isIcuCase && parent.flags & 2 /* isProjected */) {\n                return getNativeByTNode(parent, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(renderParent, 3 /* Element */);\n            if (renderParent.flags & 1 /* isComponent */ && !isIcuCase) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[renderParent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(renderParent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNode(tViewNodeChild, lView) : lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (!(nodeToProject.flags & 32 /* isDetached */)) {\n                    if (nodeToProject.type === 1 /* Projection */) {\n                        appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                    }\n                    else {\n                        // This flag must be set now or we won't know that this node is projected\n                        // if the nodes are inserted into a container later.\n                        nodeToProject.flags |= 2 /* isProjected */;\n                        appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                    }\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            var lContainer = lView[tContainerNode.index];\n            if (lContainer[QUERIES]) {\n                // Query container should only exist if it was created through a dynamic view\n                // in a directive constructor. In this case, we must splice the template\n                // matches in before the view matches to ensure query results in embedded views\n                // don't clobber query results on the template node itself.\n                queries.insertNodeBeforeViews(tContainerNode);\n            }\n            else {\n                queries.addNode(tContainerNode);\n                lContainer[QUERIES] = queries.container();\n            }\n        }\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[index + HEADER_OFFSET] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     */\n    function stylingInit() {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var tNode = getTNode(index, lView);\n        updateLastDirectiveIndex(tNode, getActiveDirectiveStylingIndex());\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function styleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Mirror implementation of the `styleProp()` instruction (found in `instructions/styling.ts`).\n     */\n    function styleProp(prop, value, suffix) {\n        _stylingProp(prop, resolveStylePropValue(value, suffix), false);\n    }\n    /**\n     * Mirror implementation of the `classProp()` instruction (found in `instructions/styling.ts`).\n     */\n    function classProp(className, value) {\n        _stylingProp(className, value, true);\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(prop, value, isClassBased) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var tNode = getTNode(index, lView);\n        var defer = getActiveDirectiveSuperClassHeight() > 0;\n        if (isClassBased) {\n            updateClassBinding(getClassesContext(tNode), lView, prop, bindingIndex, value, defer, false);\n        }\n        else {\n            var sanitizer = getCurrentOrLViewSanitizer(lView);\n            updateStyleBinding(getStylesContext(tNode), lView, prop, bindingIndex, value, sanitizer, defer, false);\n        }\n    }\n    /**\n     * Mirror implementation of the `styleMap()` instruction (found in `instructions/styling.ts`).\n     */\n    function styleMap(styles) {\n        _stylingMap(styles, false);\n    }\n    /**\n     * Mirror implementation of the `classMap()` instruction (found in `instructions/styling.ts`).\n     */\n    function classMap(classes) {\n        _stylingMap(classes, true);\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(value, isClassBased) {\n        activeStylingMapFeature();\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(index, lView);\n            var defer = getActiveDirectiveSuperClassHeight() > 0;\n            var oldValue = lView[bindingIndex];\n            var valueHasChanged = hasValueChanged$1(oldValue, value);\n            var lStylingMap = normalizeIntoStylingMap(oldValue, value);\n            if (isClassBased) {\n                updateClassBinding(getClassesContext(tNode), lView, null, bindingIndex, lStylingMap, defer, valueHasChanged);\n            }\n            else {\n                var sanitizer = getCurrentOrLViewSanitizer(lView);\n                updateStyleBinding(getStylesContext(tNode), lView, null, bindingIndex, lStylingMap, sanitizer, defer, valueHasChanged);\n            }\n        }\n    }\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * The new styling refactor ensures that styling flushing is called\n     * automatically when a template function exits or a follow-up element\n     * is visited (i.e. when `select(n)` is called). Because the `select(n)`\n     * instruction is not fully implemented yet (it doesn't actually execute\n     * host binding instruction code at the right time), this means that a\n     * styling apply function is still needed.\n     *\n     * This function is a mirror implementation of the `stylingApply()`\n     * instruction (found in `instructions/styling.ts`).\n     */\n    function stylingApply() {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeFromLView(index, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        applyClasses(renderer, lView, getClassesContext(tNode), native, directiveIndex);\n        var sanitizer = getCurrentOrLViewSanitizer(lView);\n        applyStyles(renderer, lView, getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * The purpose of this function is to traverse through the LView data\n     * for a specific element index and return the native node. Because the\n     * current implementation relies on there being a styling context array,\n     * the code below will need to loop through these array values until it\n     * gets a native element node.\n     *\n     * Note that this code is temporary and will disappear once the new\n     * styling refactor lands in its entirety.\n     */\n    function getNativeFromLView(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper[0 /* ElementPosition */];\n        }\n        else {\n            return slotValue;\n        }\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingIntoContext(tNode, attrs, startIndex) {\n        var classesContext;\n        var stylesContext;\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classesContext = classesContext || getClassesContext(tNode);\n                registerBinding(classesContext, -1, attr, true, false);\n            }\n            else if (mode == 2 /* Styles */) {\n                stylesContext = stylesContext || getStylesContext(tNode);\n                registerBinding(stylesContext, -1, attr, attrs[++i], false);\n            }\n        }\n    }\n    /**\n     * Mirror implementation of the same function found in `instructions/styling.ts`.\n     */\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex(tNode, directiveIndex) {\n        updateContextDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateContextDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.newClasses : tNode.newStyles;\n        if (!context) {\n            context = allocTStylingContext();\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.newClasses = context;\n            }\n            else {\n                tNode.newStyles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - styling\n     * - styleMap\n     * - classMap\n     * - styleProp\n     * - classProp\n     * - stylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `classProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `styleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * Note that this will allocate the provided style/class bindings to the host element if\n     * this function is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            // this is temporary hack to get the existing styling instructions to\n            // play ball with the new refactored implementation.\n            // TODO (matsko): remove this once the old implementation is not needed.\n            if (runtimeIsNewStylingInUse()) {\n                stylingInit();\n            }\n            // despite the binding being applied in a queue (below), the allocation\n            // of the directive into the context happens right away. The reason for\n            // this is to retain the ordering of the directives (which is important\n            // for the prioritization of bindings).\n            allocateOrUpdateDirectiveIntoContext(tNode.stylingTemplate, directiveStylingIndex);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () {\n                initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex);\n                registerHostDirective(tNode.stylingTemplate, directiveStylingIndex);\n            });\n        }\n        else {\n            // calling the function below ensures that the template's binding values\n            // are applied as the first set of bindings into the context. If any other\n            // styling bindings are set on the same element (by directives and/or\n            // components) then they will be applied at the end of the `elementEnd`\n            // instruction (because directives are created first before styling is\n            // executed for a new element).\n            initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        }\n    }\n    function initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex) {\n        updateContextWithBindings(tNode.stylingTemplate, directiveStylingIndex, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param value New value to write (falsy to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(styleIndex, value, suffix, forceOverride) {\n        var index = getSelectedIndex();\n        var valueToAdd = resolveStylePropValue$1(value, suffix);\n        var stylingContext = getStylingContext(index, getLView());\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styleIndex, valueToAdd, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleProp, args);\n        }\n        else {\n            updateStyleProp(stylingContext, styleIndex, valueToAdd, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            var prop = getBindingNameFromIndex(stylingContext, styleIndex, directiveStylingIndex, false);\n            // the reason why we cast the value as `boolean` is\n            // because the new styling refactor does not yet support\n            // sanitization or animation players.\n            styleProp(prop, value, suffix);\n        }\n    }\n    function resolveStylePropValue$1(value, suffix) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        return valueToAdd;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `styling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(classIndex, value, forceOverride) {\n        var index = getSelectedIndex();\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        var stylingContext = getStylingContext(index, getLView());\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classIndex, input, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassProp, args);\n        }\n        else {\n            updateClassProp(stylingContext, classIndex, input, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            var prop = getBindingNameFromIndex(stylingContext, classIndex, directiveStylingIndex, true);\n            // the reason why we cast the value as `boolean` is\n            // because the new styling refactor does not yet support\n            // sanitization or animation players.\n            classProp(prop, input);\n        }\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styles, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n            updateStyleMap(stylingContext, styles);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            styleMap(styles);\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classes, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            updateClassMap(stylingContext, classes);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            classMap(classes);\n        }\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `styleMap`, `classMap`,\n     * `styleProp` or `classProp` instructions have been run and will\n     * only apply styling to the element if any styling bindings have been updated.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var index = getSelectedIndex();\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1() || DEFAULT_TEMPLATE_DIRECTIVE_INDEX;\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        // if a non-element value is being processed then we can't render values\n        // on the element at all therefore by setting the renderer to null then\n        // the styling apply code knows not to actually apply the values...\n        var renderer = tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var stylingContext = getStylingContext(index, lView);\n        if (runtimeAllowOldStyling()) {\n            var totalPlayersQueued = renderStyling(stylingContext, renderer, lView, isFirstRender, null, null, directiveStylingIndex);\n            if (totalPlayersQueued > 0) {\n                var rootContext = getRootContext(lView);\n                scheduleTick(rootContext, 2 /* FlushPlayers */);\n            }\n        }\n        // because select(n) may not run between every instruction, the cached styling\n        // context may not get cleared between elements. The reason for this is because\n        // styling bindings (like `[style]` and `[class]`) are not recognized as property\n        // bindings by default so a select(n) instruction is not generated. To ensure the\n        // context is loaded correctly for the next element the cache below is pre-emptively\n        // cleared because there is no code in Angular that applies more styling code after a\n        // styling flush has occurred. Note that this will be fixed once FW-1254 lands.\n        setCachedStylingContext(null);\n        if (runtimeIsNewStylingInUse()) {\n            stylingApply();\n        }\n    }\n    function getActiveDirectiveStylingIndex$1() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    function getStylingContext(index, lView) {\n        var context = getCachedStylingContext();\n        if (!context) {\n            context = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            setCachedStylingContext(context);\n        }\n        else if (ngDevMode) {\n            var actualContext = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            assertEqual(context, actualContext, 'The cached styling context is invalid');\n        }\n        return context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name);\n        var renderer = lView[RENDERER];\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        var lastAttrIndex = -1;\n        if (attrs) {\n            lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            var stylingTemplate = tNode.stylingTemplate;\n            if (stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        if (runtimeIsNewStylingInUse() && lastAttrIndex >= 0) {\n            registerInitialStylingIntoContext(tNode, attrs, lastAttrIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone(tNode);\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // Go back up to parent queries only if queries have been cloned on this element.\n        if (currentQueries && previousOrParentTNode.index === currentQueries.nodeIndex) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(lView[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        var stylingContext = null;\n        if (hasClassInput(previousOrParentTNode)) {\n            stylingContext = getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            stylingContext =\n                stylingContext || getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n                if (tNode.stylingTemplate) {\n                    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n                else {\n                    tNode.stylingTemplate =\n                        initializeStaticContext(attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone(tNode);\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        // Go back up to parent queries only if queries have been cloned on this element.\n        if (currentQueries && previousOrParentTNode.index === currentQueries.nodeIndex) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(numProjectionSlots).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation1(prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation2(prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolationV(values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element, renderStringify(value)) :\n                element.textContent = renderStringify(value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var index = getSelectedIndex();\n        ɵɵtextBinding(index, ɵɵinterpolation1(prefix, v0, suffix));\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var index = getSelectedIndex();\n        ɵɵtextBinding(index, ɵɵinterpolation2(prefix, v0, i0, v1, suffix));\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var index = getSelectedIndex();\n        ɵɵtextBinding(index, ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix));\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var index = getSelectedIndex();\n        ɵɵtextBinding(index, ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix));\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var index = getSelectedIndex();\n        ɵɵtextBinding(index, ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix));\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var index = getSelectedIndex();\n        ɵɵtextBinding(index, ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix));\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var index = getSelectedIndex();\n        ɵɵtextBinding(index, ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix));\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var index = getSelectedIndex();\n        ɵɵtextBinding(index, ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix));\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var index = getSelectedIndex();\n        ɵɵtextBinding(index, ɵɵinterpolationV(values));\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContextFromLView(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$2) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var currentQueries = this._declarationParentView[QUERIES];\n                    // Query container may be missing if this view was created in a directive\n                    // constructor. Create it now to avoid losing results in embedded views.\n                    if (currentQueries && this._hostLContainer[QUERIES] == null) {\n                        this._hostLContainer[QUERIES] = currentQueries.container();\n                    }\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () {\n                        // Note that if there are no views, the container\n                        // length will be smaller than the header offset.\n                        var viewAmount = this._lContainer.length - CONTAINER_HEADER_OFFSET;\n                        return viewAmount > 0 ? viewAmount : 0;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.1.0-next.2+20.sha-6c4d912.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(ɵɵinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = (isInternalRootView || isIsolated) ?\n                createRootContext() :\n                rootViewInjector.get(ROOT_CONTEXT);\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, viewData) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            var tProjectionNode = tNode;\n            appendProjectedNodes(viewData, tProjectionNode, tProjectionNode.projection, findComponentView(viewData));\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    ɵɵtextBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = ɵɵload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        // Define this node as detached so that we don't risk projecting it\n        removedPhTNode.flags |= 32 /* isDetached */;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (placeholders === void 0) { placeholders = {}; }\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        return Object.keys(placeholders).length ?\n            input.replace(LOCALIZE_PH_REGEXP, function (match, key) { return placeholders[key] || ''; }) :\n            input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An object representing a query, which is a combination of:\n     * - query predicate to determines if a given element/directive should be included in the query\n     * - values collected based on a predicate\n     * - `QueryList` to which collected values should be reported\n     */\n    var LQuery = /** @class */ (function () {\n        function LQuery(\n        /**\n         * Next query. Used when queries are stored as a linked list in `LQueries`.\n         */\n        next, \n        /**\n         * Destination to which the value should be added.\n         */\n        list, \n        /**\n         * A predicate which determines if a given element/directive should be included in the query\n         * results.\n         */\n        predicate, \n        /**\n         * Values which have been located.\n         * This is what builds up the `QueryList._valuesTree`.\n         */\n        values, \n        /**\n         * A pointer to an array that stores collected values from views. This is necessary so we\n         * know a container into which to insert nodes collected from views.\n         */\n        containerValues) {\n            this.next = next;\n            this.list = list;\n            this.predicate = predicate;\n            this.values = values;\n            this.containerValues = containerValues;\n        }\n        return LQuery;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n            this.nodeIndex = nodeIndex;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createLQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createLQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function (tNode) {\n            return this.shallow !== null || isContentQueryHost(tNode) ?\n                new LQueries_(this, null, this.deep, tNode.index) :\n                this;\n        };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode, false);\n            add(this.shallow, tNode, false);\n        };\n        LQueries_.prototype.insertNodeBeforeViews = function (tNode) {\n            add(this.deep, tNode, true);\n            add(this.shallow, tNode, true);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            result = new LQuery(result, query.list, query.predicate, containerValues, null);\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            result = new LQuery(result, query.list, query.predicate, [], query.values);\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var tView = currentView[TVIEW];\n            var matchingIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(tView.data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    /**\n     * Add query matches for a given node.\n     *\n     * @param query The first query in the linked list\n     * @param tNode The TNode to match against queries\n     * @param insertBeforeContainer Whether or not we should add matches before the last\n     * container array. This mode is necessary if the query container had to be created\n     * out of order (e.g. a view was created in a constructor)\n     */\n    function add(query, tNode, insertBeforeContainer) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, lView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, tView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, lView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result, insertBeforeContainer);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, lView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result, insertBeforeContainer);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue, insertBeforeViewMatches) {\n        // Views created in constructors may have their container values created too early. In this case,\n        // ensure template node results are unshifted before container results. Otherwise, results inside\n        // embedded views will appear before results on parent template nodes when flattened.\n        insertBeforeViewMatches ? query.values.unshift(matchingValue) : query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createLQuery(previous, queryList, predicate, read) {\n        return new LQuery(previous, queryList, createPredicate(predicate, read), queryList._valuesTree, null);\n    }\n    /**\n     * Creates a QueryList and stores it in LView's collection of active queries (LQueries).\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function createQueryListInLView(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    lView, predicate, descend, read, isStatic, nodeIndex) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null, nodeIndex));\n        queryList._valuesTree = [];\n        queryList._static = isStatic;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        viewQueryInternal(lView, tView, predicate, descend, read, true);\n        tView.staticViewQueries = true;\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        return viewQueryInternal(lView, tView, predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, tView, predicate, descend, read, isStatic) {\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var queryList = createQueryListInLView(lView, predicate, descend, read, isStatic, -1);\n        store(index - HEADER_OFFSET, queryList);\n        setCurrentQueryIndex(index + 1);\n        return queryList;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return loadInternal(getLView(), index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getPreviousOrParentTNode();\n        return contentQueryInternal(lView, tView, directiveIndex, predicate, descend, read, false, tNode.index);\n    }\n    function contentQueryInternal(lView, tView, directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read, isStatic, nodeIndex) {\n        var contentQuery = createQueryListInLView(lView, predicate, descend, read, isStatic, nodeIndex);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getPreviousOrParentTNode();\n        contentQueryInternal(lView, tView, directiveIndex, predicate, descend, read, true, tNode.index);\n        tView.staticContentQueries = true;\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$9 = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵbind': ɵɵbind,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵinterpolation1': ɵɵinterpolation1,\n        'ɵɵinterpolation2': ɵɵinterpolation2,\n        'ɵɵinterpolation3': ɵɵinterpolation3,\n        'ɵɵinterpolation4': ɵɵinterpolation4,\n        'ɵɵinterpolation5': ɵɵinterpolation5,\n        'ɵɵinterpolation6': ɵɵinterpolation6,\n        'ɵɵinterpolation7': ɵɵinterpolation7,\n        'ɵɵinterpolation8': ɵɵinterpolation8,\n        'ɵɵinterpolationV': ɵɵinterpolationV,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵload': ɵɵload,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadViewQuery': ɵɵloadViewQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵloadContentQuery': ɵɵloadContentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstyleSanitizer': styleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$9)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports)\n            .map(unwrapModuleWithProvidersImports)\n            .forEach(function (mod) { return verifySemanticsOfNgModuleDef(mod, false); });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports)\n                    .map(unwrapModuleWithProvidersImports)\n                    .forEach(function (mod) { return verifySemanticsOfNgModuleDef(mod, false); });\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$2, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$2,\n            outputs: metadata.outputs || EMPTY_ARRAY$2,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$a = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$2 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$a, undefined, undefined, ɵ1$2);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (ngModule) { return ngModule; }, ɵ1$3 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$b, undefined, undefined, ɵ1$3);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                setLocaleId(localeId);\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext$1(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element);\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNode(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else if (tNode.child) {\n                // Otherwise, its children have to be processed.\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_b = NullInjector;\n    exports.ɵangular_packages_core_core_a = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_c = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_d = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bp = getRootContext;\n    exports.ɵangular_packages_core_core_bo = loadInternal;\n    exports.ɵangular_packages_core_core_g = createElementRef;\n    exports.ɵangular_packages_core_core_h = createTemplateRef;\n    exports.ɵangular_packages_core_core_i = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bn = noSideEffects;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bq = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵbind = ɵɵbind;\n    exports.ɵɵinterpolation1 = ɵɵinterpolation1;\n    exports.ɵɵinterpolation2 = ɵɵinterpolation2;\n    exports.ɵɵinterpolation3 = ɵɵinterpolation3;\n    exports.ɵɵinterpolation4 = ɵɵinterpolation4;\n    exports.ɵɵinterpolation5 = ɵɵinterpolation5;\n    exports.ɵɵinterpolation6 = ɵɵinterpolation6;\n    exports.ɵɵinterpolation7 = ɵɵinterpolation7;\n    exports.ɵɵinterpolation8 = ɵɵinterpolation8;\n    exports.ɵɵinterpolationV = ɵɵinterpolationV;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵloadViewQuery = ɵɵloadViewQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadContentQuery = ɵɵloadContentQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵload = ɵɵload;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}