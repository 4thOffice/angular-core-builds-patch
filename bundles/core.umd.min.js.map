{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","injectInjectorOnly","setInjectImplementation","impl","previous","injectRootLimpMode","injectableDef","injectArgs","types","arg","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","tView","currentQueries","creationMode","viewData","NodeInjectorFactory","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","executeHooks","allHooks","hooksToCall","callHooks","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","resetComponentState","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","canAccessViewProviders","node","startInjectables","startDirectives","directiveCount","providerTokenOrDef","getNodeInjectable","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","getFactoryOf","typeAny","getInheritedFactory","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","_CLEAN_PROMISE","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","executeInitAndContentHooks","createLViewData","createNodeAtIndex","createTNode","createViewNode","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","generateExpandoInstructionBlock","elementIndex","totalHostVars","initNodeFlags","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","setRendererFactory","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","directive","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","queueComponentIndexForCheck","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","R3ElementRef","R3TemplateRef","R3ViewContainerRef","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","configurable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector","_tNode","_hostView","createViewRef","componentIndex","hostComponentView","loadContext","ROOT_EXPANDO_INSTRUCTIONS","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","imported","delete","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","some","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµProvidersFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµi18nAttribute","Éµi18nExp","Éµi18nStart","Éµi18nEnd","Éµi18nApply","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","wrapReference","expandModuleWithProviders","emitInline","jitExpression","compileInjector","statements","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","compilePipe","compilePipeFromMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","Default","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Version","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","VERSION","full","major","minor","patch","isUseClassProvider","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","Éµangular_packages_core_core_p","Éµangular_packages_core_core_m","Éµangular_packages_core_core_n","Éµangular_packages_core_core_o","Éµangular_packages_core_core_g","Éµangular_packages_core_core_k","Éµangular_packages_core_core_l","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_f","Éµangular_packages_core_core_q","Éµangular_packages_core_core_s","Éµangular_packages_core_core_r","Éµangular_packages_core_core_v","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_z","Éµangular_packages_core_core_bh","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_bc","Éµangular_packages_core_core_bd","Éµangular_packages_core_core_be","Éµangular_packages_core_core_bg","Éµangular_packages_core_core_bk","Éµangular_packages_core_core_h","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_bi","Éµangular_packages_core_core_w","Éµangular_packages_core_core_x","Éµangular_packages_core_core_y","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµProvidersResolver","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$2","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileComponent","ÉµcompileDirective","ÉµcompileNgModule","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµbindPlayerFactory","bindPlayerFactory","ÉµaddPlayer","addPlayer","element$$1","getOrCreatePlayerContext","getRootContext$1","getRootView$1","componentOrView","ÉµgetPlayers","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","ÉµcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ÉµSWITCH_COMPILE_COMPONENT__POST_R3__","ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__","ÉµSWITCH_COMPILE_PIPE__POST_R3__","ÉµSWITCH_COMPILE_NGMODULE__POST_R3__","ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","ÉµSWITCH_IVY_ENABLED__POST_R3__","ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","shift","ÉµSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ÉµpublishGlobalUtil","publishGlobalUtil","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0-beta.0+8.sha-b0476f3\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n    * Current implementation of inject.\n    *\n    * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n    * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n    * way for two reasons:\n    *  1. `Injector` should not depend on ivy logic.\n    *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n    */\n    var _injectImplementation;\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 15 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function setRendererFactory(factory) {\n        rendererFactory = factory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                return bloomHash();\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if ((flags & (2 /* Self */ | 1 /* Host */)) === 0) {\n            var moduleInjector = lViewData[INJECTOR$1];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & 8 /* Optional */);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & 8 /* Optional */);\n            }\n        }\n        if (flags & 8 /* Optional */) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = currentTView.data;\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return getNodeInjectable(tInjectables, injectorView, i, tNode);\n            }\n        }\n        return NOT_FOUND;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ && getParentInjectorViewOffset(parentLocation) > 0));\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 2 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 3 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 2 /* Class */ : 3 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 15 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData) {\n        var tView = getTView();\n        var creationMode = getCreationMode();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        setHostBindings(tView, viewData);\n        var parentFirstTemplatePass = getFirstTemplatePass();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block is taken into account.\n                        bindingRootIndex += INJECTOR_SIZE;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks(viewData) {\n        if (!getCheckNoChangesMode()) {\n            var tView = getTView();\n            var creationMode = getCreationMode();\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var viewData = getViewData();\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var rendererFactory = getRendererFactory();\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews(hostView);\n            }\n            else {\n                executeInitAndContentHooks(hostView);\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(getTView(), hostView);\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        setRendererFactory(factory);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        var viewData = getViewData();\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        if (getFirstTemplatePass()) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, previousOrParentTNode);\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        generateExpandoInstructionBlock(tView, tNode, directives);\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directives) {\n        var directiveCount = directives ? directives.length : 0;\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        if (directiveCount > 0) {\n            (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, directiveCount);\n        }\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        if (def.hostBindings)\n            queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getRendererFactory().createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getRenderer(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, comment, true);\n            appendChild(comment, hostTNode, hostView);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * NOTE: The following functions might not be ideal for core usage in Angular...\n     *\n     * Each function below is designed\n     */\n    /**\n     * Returns the component instance associated with the target.\n     *\n     * If a DOM is used then it will return the component that\n     *    owns the view where the element is situated.\n     * If a component instance is used then it will return the\n     *    instance of the parent component depending on where\n     *    the component instance is exists in a template.\n     * If a directive instance is used then it will return the\n     *    component that contains that directive in it's template.\n     */\n    function getComponent(target) {\n        var context = loadContext(target);\n        if (context.component === undefined) {\n            var lViewData = context.lViewData;\n            while (lViewData) {\n                var ctx = lViewData[CONTEXT];\n                if (ctx && isComponentInstance(ctx)) {\n                    context.component = ctx;\n                    break;\n                }\n                lViewData = lViewData[PARENT];\n            }\n            if (context.component === undefined) {\n                context.component = null;\n            }\n        }\n        return context.component;\n    }\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns a list of all the components in the application\n     * that are have been bootstrapped.\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lViewData);\n    }\n    /**\n     * Returns a list of all the directives that are associated\n     * with the underlying target element.\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = discoverDirectives(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=local\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ngDev).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ngDev';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getHostComponent', getHostComponent);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Root component will always have an element index of 0 and an injector size of 1\n    var ROOT_EXPANDO_INSTRUCTIONS = [0, 1];\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks(rootView);\n            detectChangesInternal(componentView, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            tView.expandoInstructions = ROOT_EXPANDO_INSTRUCTIONS.slice();\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        setHostBindings(tView, rootView);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var token = resolveForwardRef(provider);\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                factory = function () { return provider.useValue; };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /*\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n    * Resolves a provider and publishes it to the DI system.\n    */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n    * Add a factory in a multi factory.\n    */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n    * Returns the index of item in the array, but only in the begin to end range.\n    */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n    * Use this with `multi` `providers`.\n    */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n    * Use this with `multi` `viewProviders`.\n    *\n    * This factory knows how to concatenate itself with the existing `multi` `providers`.\n    */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n    * Maps an array of factories into an array of values.\n    */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n    * Creates a multi factory.\n    */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµProvidersFeature': ProvidersFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind2,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµi18nAttribute': i18nAttribute,\n        'Éµi18nExp': i18nExp,\n        'Éµi18nStart': i18nStart,\n        'Éµi18nEnd': i18nEnd,\n        'Éµi18nApply': i18nApply,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    var animations = metadata.animations !== null ? new compiler.WrappedNodeExpr(metadata.animations) : null;\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: animations, viewProviders: metadata.viewProviders ? new compiler.WrappedNodeExpr(metadata.viewProviders) :\n                            null }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers ? new compiler.WrappedNodeExpr(metadata.providers) : null\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Éµ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0-beta.0+8.sha-b0476f3');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var Éµ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: Éµ0$3 });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (ivyEnabled ? this.createDebugContext(el) : null);\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_p = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_m = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_n = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_o = _localeFactory;\n    exports.Éµangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_k = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_l = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = injectInjectorOnly;\n    exports.Éµangular_packages_core_core_d = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_e = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_q = wtfEnabled;\n    exports.Éµangular_packages_core_core_s = createScope;\n    exports.Éµangular_packages_core_core_r = detectWTF;\n    exports.Éµangular_packages_core_core_v = endTimeRange;\n    exports.Éµangular_packages_core_core_t = leave;\n    exports.Éµangular_packages_core_core_u = startTimeRange;\n    exports.Éµangular_packages_core_core_ba = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_z = injectAttributeImpl;\n    exports.Éµangular_packages_core_core_bh = NG_INJECTABLE_DEF;\n    exports.Éµangular_packages_core_core_bb = bindingUpdated;\n    exports.Éµangular_packages_core_core_bc = getPreviousOrParentTNode;\n    exports.Éµangular_packages_core_core_bd = getViewData;\n    exports.Éµangular_packages_core_core_be = nextContextImpl;\n    exports.Éµangular_packages_core_core_bg = BoundPlayerFactory;\n    exports.Éµangular_packages_core_core_bk = loadInternal;\n    exports.Éµangular_packages_core_core_h = createElementRef;\n    exports.Éµangular_packages_core_core_i = createTemplateRef;\n    exports.Éµangular_packages_core_core_j = createViewRef;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_bi = getClosureSafeProperty;\n    exports.Éµangular_packages_core_core_w = _def;\n    exports.Éµangular_packages_core_core_x = DebugRendererFactory2;\n    exports.Éµangular_packages_core_core_y = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµProvidersResolver = ProvidersFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nAttribute = i18nAttribute;\n    exports.Éµi18nExp = i18nExp;\n    exports.Éµi18nStart = i18nStart;\n    exports.Éµi18nEnd = i18nEnd;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompileNgModule = compileNgModule;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµbindPlayerFactory = bindPlayerFactory;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ÉµSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ÉµpublishGlobalUtil = publishGlobalUtil;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}