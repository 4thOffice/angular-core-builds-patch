{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_PROV_DEF","NG_INJECTABLE_DEF","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","R3FactoryTarget","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_BASE_DEF","ngBaseDef","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","instructionState","lFrame","createLFrame","bindingsEnabled","elementExitFn","checkNoChangesMode","setCurrentDirectiveDef","currentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","hasActiveElementFlag","flag","selectedIndex","setActiveHostElement","elementIndex","executeElementExitFn","setSelectedIndex","activeDirectiveId","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","_isParent","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","setBindingRoot","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","RendererStyleFlags3","leaveDI","leaveView","enterView","elementDepthCount","currentNamespace","currentSanitizer","currentLFrame","childLFrame","child","parent","leaveViewProcessExit","nextContextImpl","level","walkUpViews","nestingLevel","currentView","getSelectedIndex","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","allocStylingMapArray","getConfig","hasConfig","allowDirectStyling","hostBindingsMode","allow","config","contextIsLocked","getLockedConfig","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","bindingIndex","getValue","isContextLocked","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","forceStylesAsString","hyphenateProps","str","keys","prop","propLabel","isHostStylingActive","directiveOrSourceId","stylingMapToString","isClassBased","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","normalizeIntoStylingMap","bindingValue","newValues","normalizeProps","allValuesTrue","splitOnWhitespace","array","start","foundChar","selectClassBasedInputName","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","load","getComponentLViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","hostTNode","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","VALUE_IS_EXTERNALLY_MODIFIED","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","totalSources","addNewSourceColumn","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","lockAndFinalizeContext","updateInitialStylingOnContext","initialStyling","hasInitialStyling","lockContext","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","applyStylingValue","applyFn","valueToApply","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","setClassName","setStyleAttr","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","createProxy","handler","g","Proxy","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","hasMapBindings","_convertMapBindingsToStylingMapArrays","_mapValues","set","ownKeys","k","limit","mockElement","mapFn","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","templateBindingsLocked","hostBindingsLocked","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","inputsToStore","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","currentChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","processProvider","processInjectorType","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","multiProvider","multiProviderMixError","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","computeDeps","providerDeps","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","constsIndex","tViewConsts","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵinvalidFactory","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","stylingProp","getAndIncrementBindingIndex","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","isHostStyling","getClassesContext","getStylesContext","sanitizerToUse","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","hasDirectiveInput","updateDirectiveInputValue","ɵɵclassMap","classMapInternal","valueHasChanged","applyStylingMapDirectly","bindingValueContainsInitial","hasInitial","initialValue","cachedValueIndex","cachedValue","writeToAttrDirectly","checkIfExternallyModified","cssText","removeStylingValues","isStylingMapArray","objectToClassName","initialStyles","newValue","inputName","normalizeStylingDirectiveInputValue","forceClassesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","resetCurrentStyleSanitizer","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","hasDirectives","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","getSuperType","ɵɵInheritDefinitionFeature","superType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","ngFactoryDef","compileFactory","injectFn","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","propertyName","splitByComma","piece","static","compilePipe","ngPipeDef","getPipeMetadata","Pipe","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__PRE_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","contains","toggle","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_b","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵINJECTOR_SCOPE","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_PIPE_DEF","ɵNG_MOD_DEF","ɵNG_BASE_DEF","ɵNG_PROV_DEF","ɵNG_INJ_DEF","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.13+52.sha-8d15bfa.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        var def = (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ɵprov's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        if (def) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        elementExitFn: null,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getCurrentDirectiveDef() {\n        return instructionState.lFrame.currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        instructionState.lFrame.currentDirectiveDef = def;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current LView.\n     *\n     * The return value can be `null` if the method is called outside of template. This can happen if\n     * directive is instantiated by module injector (rather than by node injector.)\n     */\n    function getLView() {\n        // TODO(misko): the return value should be `LView|null` but doing so breaks a lot of code.\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.lView;\n    }\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (instructionState.lFrame.selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        instructionState.lFrame.selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n        instructionState.lFrame.activeDirectiveId = 0;\n    }\n    function executeElementExitFn() {\n        instructionState.elementExitFn();\n        instructionState.lFrame.selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        if (instructionState.elementExitFn == null) {\n            instructionState.elementExitFn = fn;\n        }\n        ngDevMode &&\n            assertEqual(instructionState.elementExitFn, fn, 'Expecting to always get the same function');\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return instructionState.lFrame.activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        instructionState.lFrame.activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = _isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            var lView = lFrame.lView;\n            index = lFrame.bindingRootIndex = lView[BINDING_INDEX] = lView[TVIEW].bindingStartIndex;\n        }\n        return index;\n    }\n    function setBindingRoot(value) {\n        instructionState.lFrame.bindingRootIndex = value;\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        if (ngDevMode) {\n            // resetting for safety in dev mode only.\n            newLFrame.isParent = DEV_MODE_VALUE;\n            newLFrame.selectedIndex = DEV_MODE_VALUE;\n            newLFrame.contextLView = DEV_MODE_VALUE;\n            newLFrame.elementDepthCount = DEV_MODE_VALUE;\n            newLFrame.currentNamespace = DEV_MODE_VALUE;\n            newLFrame.currentSanitizer = DEV_MODE_VALUE;\n            newLFrame.currentDirectiveDef = DEV_MODE_VALUE;\n            newLFrame.activeDirectiveId = DEV_MODE_VALUE;\n            newLFrame.bindingRootIndex = DEV_MODE_VALUE;\n            newLFrame.currentQueryIndex = DEV_MODE_VALUE;\n        }\n    }\n    var DEV_MODE_VALUE = 'Value indicating that DI is trying to read value which it should not need to know about.';\n    /**\n     * This is a light weight version of the `leaveView` which is needed by the DI system.\n     *\n     * Because the implementation is same it is only an alias\n     */\n    var leaveDI = leaveView;\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.isParent = true;\n        newLFrame.lView = newView;\n        newLFrame.selectedIndex = 0;\n        newLFrame.contextLView = newView;\n        newLFrame.elementDepthCount = 0;\n        newLFrame.currentNamespace = null;\n        newLFrame.currentSanitizer = null;\n        newLFrame.currentDirectiveDef = null;\n        newLFrame.activeDirectiveId = 0;\n        newLFrame.bindingRootIndex = -1;\n        newLFrame.currentQueryIndex = 0;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            currentDirectiveDef: null,\n            activeDirectiveId: 0,\n            bindingRootIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    function leaveViewProcessExit() {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        leaveView();\n    }\n    function leaveView() {\n        instructionState.lFrame = instructionState.lFrame.parent;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        instructionState.lFrame.contextLView = walkUpViews(level, instructionState.lFrame.contextLView);\n        return instructionState.lFrame.contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index << 1 /* Size */;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$2 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$2\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$3 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$3)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray(null);\n        var config = 0 /* Initial */;\n        if (hasDirectives) {\n            config |= 1 /* HasDirectives */;\n        }\n        if (initialStyling.length > 1 /* ValuesStartPosition */) {\n            config |= 16 /* HasInitialStyling */;\n        }\n        return [\n            config,\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray(value) {\n        return [value];\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function hasConfig(context, flag) {\n        return (getConfig(context) & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND ngDevMode is falsy\n     * 2. context is locked for template or host bindings (depending on `hostBindingsMode`)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(context, hostBindingsMode) {\n        var allow = false;\n        var config = getConfig(context);\n        var contextIsLocked = (config & getLockedConfig(hostBindingsMode)) !== 0;\n        var hasNoDirectives = (config & 1 /* HasDirectives */) === 0;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        if (hasNoDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? contextIsLocked : true;\n        }\n        else if (contextIsLocked) {\n            var hasNoCollisions = (config & 8 /* HasCollisions */) === 0;\n            var hasOnlyMapsOrOnlyProps = (config & 6 /* HasPropAndMapBindings */) !== 6 /* HasPropAndMapBindings */;\n            allow = hasNoCollisions && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function patchConfig(context, flag) {\n        context[0 /* ConfigPosition */] |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[1 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex !== 0 ? data[bindingIndex] : null;\n    }\n    function lockContext(context, hostBindingsMode) {\n        patchConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function isContextLocked(context, hostBindingsMode) {\n        return hasConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function getLockedConfig(hostBindingsMode) {\n        return hostBindingsMode ? 256 /* HostBindingsLocked */ :\n            128 /* TemplateBindingsLocked */;\n    }\n    function getPropValuesStartPosition(context) {\n        var startPosition = 3 /* ValuesStartPosition */;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[2 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 3 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles, hyphenateProps) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var propLabel = hyphenateProps ? hyphenate(prop) : prop;\n                var value = styles[prop];\n                if (value !== null) {\n                    str = concatString(str, propLabel + \":\" + value, ';');\n                }\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : allocStylingMapArray(null);\n        stylingMapArr[0 /* RawValuePosition */] = newValues;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            props = splitOnWhitespace(newValues);\n            allValuesTrue = props !== null;\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    function splitOnWhitespace(text) {\n        var array = null;\n        var length = text.length;\n        var start = 0;\n        var foundChar = false;\n        for (var i = 0; i < length; i++) {\n            var char = text.charCodeAt(i);\n            if (char <= 32 /*' '*/) {\n                if (foundChar) {\n                    if (array === null)\n                        array = [];\n                    array.push(text.substring(start, i));\n                    foundChar = false;\n                }\n                start = i + 1;\n            }\n            else {\n                foundChar = true;\n            }\n        }\n        if (foundChar) {\n            if (array === null)\n                array = [];\n            array.push(text.substring(start, length));\n            foundChar = false;\n        }\n        return array;\n    }\n    // TODO (matsko|AndrewKushnir): refactor this once we figure out how to generate separate\n    // `input('class') + classMap()` instructions.\n    function selectClassBasedInputName(inputs) {\n        return inputs.hasOwnProperty('class') ? 'class' : 'className';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lView, index, tNode) {\n        var value = lView[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var VALUE_IS_EXTERNALLY_MODIFIED = {};\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngClass])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding before it gets locked.\n        if (!isContextLocked(context, hostBindingsMode) || value !== NO_CHANGE) {\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngStyle])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding before it gets locked.\n        if (!isContextLocked(context, hostBindingsMode) || value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        if (!isContextLocked(context, hostBindingsMode)) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tNode.firstTemplatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired);\n            patchConfig(context, hostBindingsMode ? 64 /* HasHostBindings */ : 32 /* HasTemplateBindings */);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = (getConfig(context) & 64 /* HasHostBindings */) &&\n                !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, data, prop);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, data, prop) {\n        var valuesCount = getValuesCount(context);\n        if (prop !== null && hasConfig(context, 2 /* HasPropBindings */)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 3 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            var bindingsStart = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, countId, sourceIndex, prop, bindingValue, sanitizationRequired) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 3 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(context, 8 /* HasCollisions */);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 3 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[1 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            if (!isContextLocked(stylesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(stylesContext, hostBindingsMode);\n            }\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode);\n            }\n        }\n        if (classesContext) {\n            if (!isContextLocked(classesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(classesContext, hostBindingsMode);\n            }\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     *\n     * Note that the `TStylingContext` styling context contains two locks: one for template bindings\n     * and another for host bindings. Either one of these locks will be set when styling is applied\n     * during the template binding flush and/or during the host bindings flush.\n     */\n    function lockAndFinalizeContext(context, hostBindingsMode) {\n        var initialValues = getStylingMapArray(context);\n        updateInitialStylingOnContext(context, initialValues);\n        lockContext(context, hostBindingsMode);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, COUNT_ID_FOR_STYLING, 0, prop, value, false);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(context, 16 /* HasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 3 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, element, data, bindingIndex, value, isClassBased, sanitizer, forceUpdate, bindingValueContainsInitial) {\n        var oldValue = getValue(data, bindingIndex);\n        if (forceUpdate || hasValueChanged(oldValue, value)) {\n            var config = getConfig(context);\n            var hasInitial = config & 16 /* HasInitialStyling */;\n            var initialValue = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n            setValue(data, bindingIndex, value);\n            // the cached value is the last snapshot of the style or class\n            // attribute value and is used in the if statement below to\n            // keep track of internal/external changes.\n            var cachedValueIndex = bindingIndex + 1;\n            var cachedValue = getValue(data, cachedValueIndex);\n            if (cachedValue === NO_CHANGE) {\n                cachedValue = initialValue;\n            }\n            cachedValue = typeof cachedValue !== 'string' ? '' : cachedValue;\n            // If a class/style value was modified externally then the styling\n            // fast pass cannot guarantee that the external values are retained.\n            // When this happens, the algorithm will bail out and not write to\n            // the style or className attribute directly.\n            var writeToAttrDirectly = !(config & 2 /* HasPropBindings */);\n            if (writeToAttrDirectly &&\n                checkIfExternallyModified(element, cachedValue, isClassBased)) {\n                writeToAttrDirectly = false;\n                if (oldValue !== VALUE_IS_EXTERNALLY_MODIFIED) {\n                    // direct styling will reset the attribute entirely each time,\n                    // and, for this reason, if the algorithm decides it cannot\n                    // write to the class/style attributes directly then it must\n                    // reset all the previous style/class values before it starts\n                    // to apply values in the non-direct way.\n                    removeStylingValues(renderer, element, oldValue, isClassBased);\n                    // this will instruct the algorithm not to apply class or style\n                    // values directly anymore.\n                    setValue(data, cachedValueIndex, VALUE_IS_EXTERNALLY_MODIFIED);\n                }\n            }\n            if (writeToAttrDirectly) {\n                var valueToApply = void 0;\n                if (isClassBased) {\n                    valueToApply = typeof value === 'string' ? value : objectToClassName(value);\n                    if (initialValue !== null) {\n                        valueToApply = concatString(initialValue, valueToApply, ' ');\n                    }\n                    setClassName(renderer, element, valueToApply);\n                }\n                else {\n                    valueToApply = forceStylesAsString(value, true);\n                    if (initialValue !== null) {\n                        valueToApply = initialValue + ';' + valueToApply;\n                    }\n                    setStyleAttr(renderer, element, valueToApply);\n                }\n                setValue(data, cachedValueIndex, valueToApply || null);\n            }\n            else {\n                var applyFn = isClassBased ? setClass : setStyle;\n                var map = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n                var initialStyles = hasInitial ? getStylingMapArray(context) : null;\n                for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                    var prop = getMapProp(map, i);\n                    var value_1 = getMapValue(map, i);\n                    // case 1: apply the map value (if it exists)\n                    var applied = applyStylingValue(renderer, element, prop, value_1, applyFn, bindingIndex, sanitizer);\n                    // case 2: apply the initial value (if it exists)\n                    if (!applied && initialStyles) {\n                        applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                    }\n                    // default case: apply `null` to remove the value\n                    if (!applied) {\n                        applyFn(renderer, element, prop, null, bindingIndex);\n                    }\n                }\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                if (isClassBased) {\n                    state.lastDirectClassMap = map;\n                }\n                else {\n                    state.lastDirectStyleMap = map;\n                }\n            }\n        }\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, element, data, bindingIndex, prop, value, isClassBased, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            var applyFn = isClassBased ? setClass : setStyle;\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            if (!applied && hasConfig(context, 4 /* HasMapBindings */)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(context, 16 /* HasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    var setClassName = function (renderer, native, className) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'class', className);\n            }\n            else {\n                native.className = className;\n            }\n        }\n    };\n    var setStyleAttr = function (renderer, native, value) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'style', value);\n            }\n            else {\n                native.setAttribute('style', value);\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    function objectToClassName(obj) {\n        var str = '';\n        if (obj) {\n            for (var key in obj) {\n                var value = obj[key];\n                if (value) {\n                    str += (str.length ? ' ' : '') + key;\n                }\n            }\n        }\n        return str;\n    }\n    /**\n     * Determines whether or not an element style/className value has changed since the last update.\n     *\n     * This function helps Angular determine if a style or class attribute value was\n     * modified by an external plugin or API outside of the style binding code. This\n     * means any JS code that adds/removes class/style values on an element outside\n     * of Angular's styling binding algorithm.\n     *\n     * @returns true when the value was modified externally.\n     */\n    function checkIfExternallyModified(element, cachedValue, isClassBased) {\n        // this means it was checked before and there is no reason\n        // to compare the style/class values again. Either that or\n        // web workers are being used.\n        if (_global.Node === 'undefined' || cachedValue === VALUE_IS_EXTERNALLY_MODIFIED)\n            return true;\n        // comparing the DOM value against the cached value is the best way to\n        // see if something has changed.\n        var currentValue = (isClassBased ? element.className : (element.style && element.style.cssText)) || '';\n        return currentValue !== (cachedValue || '');\n    }\n    /**\n     * Removes provided styling values from the element\n     */\n    function removeStylingValues(renderer, element, values, isClassBased) {\n        var arr;\n        if (isStylingMapArray(values)) {\n            arr = values;\n        }\n        else {\n            arr = normalizeIntoStylingMap(null, values, !isClassBased);\n        }\n        var applyFn = isClassBased ? setClass : setStyle;\n        for (var i = 1 /* ValuesStartPosition */; i < arr.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(arr, i);\n            if (value) {\n                var prop = getMapProp(arr, i);\n                applyFn(renderer, element, prop, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 3 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, isClassBased) {\n        var debug = new TStylingContextDebug(context, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _isClassBased) {\n            this.context = context;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 3 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 3 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var isClassBased = this._isClassBased;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                // because the styling algorithm runs into two different\n                // modes: direct and context-resolution, the output of the entries\n                // object is different because the removed values are not\n                // saved between updates. For this reason a proxy is created\n                // so that the behavior is the same when examining values\n                // that are no longer active on the element.\n                return createProxy({\n                    get: function (target, prop) {\n                        var value = entries[prop];\n                        if (!value) {\n                            value = {\n                                prop: prop,\n                                value: isClassBased ? false : null,\n                                bindingIndex: null,\n                            };\n                        }\n                        return value;\n                    },\n                    set: function (target, prop, value) { return false; },\n                    ownKeys: function () { return Object.keys(entries); },\n                    getOwnPropertyDescriptor: function (k) {\n                        // we use a special property descriptor here so that enumeration operations\n                        // such as `Object.keys` will work on this proxy.\n                        return {\n                            enumerable: true,\n                            configurable: true,\n                        };\n                    },\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._convertMapBindingsToStylingMapArrays = function (data) {\n            var context = this.context.context;\n            var limit = getPropValuesStartPosition(context);\n            for (var i = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */; i < limit; i++) {\n                var bindingIndex = context[i];\n                var bindingValue = bindingIndex !== 0 ? getValue(data, bindingIndex) : null;\n                if (bindingValue && !Array.isArray(bindingValue)) {\n                    var stylingMapArray = normalizeIntoStylingMap(null, bindingValue, !this._isClassBased);\n                    setValue(data, bindingIndex, stylingMapArray);\n                }\n            }\n        };\n        NodeStylingDebug.prototype._mapValues = function (data, fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = hasConfig(this.context.context, 4 /* HasMapBindings */);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, null, mockElement, data, true, mapFn, sanitizer, false);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, null, mockElement, data, true, mapFn, sanitizer, true);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(context) {\n        var hasMapBindings = hasConfig(context, 4 /* HasMapBindings */);\n        var hasPropBindings = hasConfig(context, 2 /* HasPropBindings */);\n        var hasCollisions = hasConfig(context, 8 /* HasCollisions */);\n        var hasTemplateBindings = hasConfig(context, 32 /* HasTemplateBindings */);\n        var hasHostBindings = hasConfig(context, 64 /* HasHostBindings */);\n        var templateBindingsLocked = hasConfig(context, 128 /* TemplateBindingsLocked */);\n        var hostBindingsLocked = hasConfig(context, 256 /* HostBindingsLocked */);\n        var allowDirectStyling$1 = allowDirectStyling(context, false) || allowDirectStyling(context, true);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            templateBindingsLocked: templateBindingsLocked,\n            hostBindingsLocked: hostBindingsLocked,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = NG_DEV_MODE && createNamedArrayType('LView') || null;\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 64 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 256 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 128 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    var ɵ0$4 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$4)();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        enterView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            leaveViewProcessExit();\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        if ((tNode.flags & 256 /* hasHostBindings */) === 256 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TAttributes[]\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: publicName\n             * i+2: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+2]\n             */\n            for (var i = 0; i < dataValue.length; i += 3) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 2], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName) || typeof Node !== 'function' || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives !== null) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 256 /* hasHostBindings */;\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i - start);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(null);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.initialInputs !== null) {\n            setInputsFromAttrs(lView, directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentLViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            if (tViewNodeChild !== null) {\n                if (tViewNodeChild.type === 4 /* ElementContainer */ ||\n                    tViewNodeChild.type === 5 /* IcuContainer */) {\n                    var currentChild = tViewNodeChild.child;\n                    while (currentChild && (currentChild.type === 4 /* ElementContainer */ ||\n                        currentChild.type === 5 /* IcuContainer */)) {\n                        currentChild = currentChild.child;\n                    }\n                    tViewNodeChild = currentChild || tViewNodeChild;\n                }\n                return getNativeByTNodeOrNull(tViewNodeChild, lView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 128 /* isDetached */) !== 128 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = findComponentView(lView); // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$5 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Pipe\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var ɵ0$6 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$8);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$9 = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$1 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$a = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$a, Query);\n    var ɵ1$2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$2, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param constsIndex Index of template in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, constsIndex, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex]);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(getNativeByTNode(tNode, lView), lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = getAndIncrementBindingIndex(lView, false);\n        var updated = stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = getAndIncrementBindingIndex(lView, false);\n        var updated = stylingProp(getSelectedIndex(), bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(elementIndex, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var hostBindingsMode = isHostStyling();\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (!isContextLocked(context, hostBindingsMode)) {\n            patchConfig(context, 2 /* HasPropBindings */);\n        }\n        // [style.prop] and [class.name] bindings do not use `bind()` and will\n        // therefore manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && getCheckNoChangesMode()) {\n            var oldValue = getValue(lView, bindingIndex);\n            if (hasValueChanged(oldValue, value)) {\n                throwErrorIfNoChangesMode(false, oldValue, value);\n            }\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, native, lView, bindingIndex, prop, value, isClassBased, sanitizerToUse);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value);\n            }\n            else {\n                updated = updateStyleViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var hasDirectiveInput = hasStyleInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = getAndIncrementBindingIndex(lView, true);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasDirectiveInput && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        stylingMap(context, tNode, lView, bindingIndex, styles, false, hasDirectiveInput);\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var hasDirectiveInput = hasClassInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = getAndIncrementBindingIndex(lView, true);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasDirectiveInput && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        stylingMap(context, tNode, lView, bindingIndex, classes, true, hasDirectiveInput);\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function stylingMap(context, tNode, lView, bindingIndex, value, isClassBased, hasDirectiveInput) {\n        var directiveIndex = getActiveDirectiveId();\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = getValue(lView, bindingIndex);\n        var hostBindingsMode = isHostStyling();\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        // [style] and [class] bindings do not use `bind()` and will therefore\n        // manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && valueHasChanged && getCheckNoChangesMode()) {\n            throwErrorIfNoChangesMode(false, oldValue, value);\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (!isContextLocked(context, hostBindingsMode)) {\n            patchConfig(context, 4 /* HasMapBindings */);\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            applyStylingMapDirectly(renderer, context, native, lView, bindingIndex, value, isClassBased, sanitizerToUse, valueHasChanged, hasDirectiveInput);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged);\n            }\n            else {\n                updateStyleViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged);\n            }\n            setElementExitFn(stylingApply);\n        }\n        if (ngDevMode) {\n            isClassBased ? ngDevMode.classMap : ngDevMode.styleMap++;\n            if (valueHasChanged) {\n                isClassBased ? ngDevMode.classMapCacheMiss : ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context, false)) {\n                var inputName = isClassBased ? selectClassBasedInputName(tNode.inputs) : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue, true), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, classesContext, stylesContext, native, directiveIndex, sanitizer);\n        resetCurrentStyleSanitizer();\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray(null);\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray(null);\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 64 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n    function getAndIncrementBindingIndex(lView, isMapBased) {\n        // map-based bindings use two slots because the previously constructed\n        // className / style value must be compared against.\n        var index = lView[BINDING_INDEX];\n        lView[BINDING_INDEX] += isMapBased ? 2 : 1;\n        return index;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param constsIndex Index of the element in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, constsIndex, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        var consts = tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, consts);\n        if (consts != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, consts);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, consts, lastAttrIndex);\n            }\n        }\n        if ((tNode.flags & 64 /* hasInitialStyling */) === 64 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            var inputName = selectClassBasedInputName(tNode.inputs);\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs[inputName]);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param constsIndex Index of the element in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, constsIndex, localRefs) {\n        ɵɵelementStart(index, name, constsIndex, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param constsIndex Index of the container in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, constsIndex, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        var tViewConsts = tView.consts;\n        var consts = tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, consts);\n        if (consts && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, consts, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param constsIndex Index of the container in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, constsIndex, localRefs) {\n        ɵɵelementContainerStart(index, constsIndex, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveViewProcessExit();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, tNode, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, tNode, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, tNode, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, lView[BINDING_INDEX] - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    lView[BINDING_INDEX] - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$b\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.13+52.sha-8d15bfa.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$c = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, lView, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 128 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearRegisteredModuleState() {\n        modules.clear();\n    }\n    function getRegisteredModulesState() {\n        return new Map(modules);\n    }\n    function restoreRegisteredModulesState(moduleMap) {\n        modules = new Map(moduleMap);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$d = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$d)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error_1.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$3 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$e, undefined, undefined, ɵ1$3);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (ngModule) { return ngModule; }, ɵ1$4 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$f, undefined, undefined, ɵ1$4);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__PRE_R3__;\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your polyfills.ts file)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_be = getLView;\n    exports.ɵangular_packages_core_core_bf = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bd = instructionState;\n    exports.ɵangular_packages_core_core_bg = nextContextImpl;\n    exports.ɵangular_packages_core_core_bo = getRootContext;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_bi = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bn = noSideEffects;\n    exports.ɵangular_packages_core_core_bj = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bk = makePropDecorator;\n    exports.ɵangular_packages_core_core_bl = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode$1;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}